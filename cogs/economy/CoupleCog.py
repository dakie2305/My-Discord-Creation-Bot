import discord
from discord.ext import commands
from discord.app_commands import Choice
import Handling.Economy.Profile.ProfileMongoManager as ProfileMongoManager
from Handling.Misc.SelfDestructView import SelfDestructView
from CustomEnum.SlashEnum import SlashCommand
from CustomEnum.EmojiEnum import EmojiCreation2
from Handling.Misc.UtilitiesFunctionsEconomy import UtilitiesFunctions
from Handling.Economy.Couple.CouplePairView import CouplePairView
from Handling.Economy.Couple.CoupleBreakupView import CoupleBreakupView
import CustomFunctions
import CustomEnum.UserEnum as UserEnum
import Handling.Economy.Couple.CoupleMongoManager as CoupleMongoManager
from datetime import datetime, timedelta

async def setup(bot: commands.Bot):
    await bot.add_cog(CoupleCog(bot=bot))
    print("Couple is ready!")

class CoupleCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    couple_group = discord.app_commands.Group(name="couple", description="C√°c l·ªánh li√™n quan ƒë·∫øn Couple!")
    #region pair
    @couple_group.command(name="pair", description="K·∫øt ƒë√¥i v·ªõi m·ªôt ng∆∞·ªùi b·∫•t k·ª≥")
    @discord.app_commands.checks.cooldown(1, 30)
    @discord.app_commands.describe(user="Ng∆∞·ªùi m√† b·∫°n mu·ªën th√†nh ƒë√¥i tri k·ªâ.")
    async def couple_pair_slash_command(self, interaction: discord.Interaction, user: discord.Member):
        await interaction.response.defer(ephemeral=False)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        if user.bot and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng th·ªÉ th√†nh ƒë√¥i v·ªõi bot ƒë∆∞·ª£c!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        #Ki·ªÉm tra xem c·∫£ hai ƒë√£ l√† ƒë√¥i c·ªßa ai kh√°c ch∆∞a
        first_user_check  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if first_user_check != None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n ƒë√£ c√≥ b·∫°n k·∫øt ƒë√¥i, kh√¥ng ƒë∆∞·ª£c ph√©p l·∫≠p harem! Mu·ªën k·∫øt ƒë√¥i ng∆∞·ªùi kh√°c th√¨ chia tay ng∆∞·ªùi c≈© ƒëi!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        second_user_check  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=user.id)
        if second_user_check != None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"ƒê·ªëi ph∆∞∆°ng l√† hoa ƒë√£ c√≥ ch·ªß!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        
        first_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if first_profile == None:
            first_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=interaction.user.id, user_name=interaction.user.name, user_display_name=interaction.user.display_name)
        
        time_window = timedelta(days=3)
        if first_profile.last_breakup != None:
            check = UtilitiesFunctions.check_if_within_time_delta(input=first_profile.last_breakup, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông th√™m xem ch·ª´ng n√†o m·ªõi ƒë∆∞·ª£c th·ª±c hi·ªán l·∫°i l·ªánh
                next_time = first_profile.last_breakup + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üíî B·∫°n v·ª´a chia tay ng∆∞·ªùi c≈© kh√¥ng l√¢u. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh v√†o l√∫c <t:{unix_time}:f> !", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
        
        
        
        second_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=user.id)
        if second_profile == None:
            second_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=user.id, user_name=user.name, user_display_name=user.display_name)
        
        if second_profile.last_breakup != None:
            check = UtilitiesFunctions.check_if_within_time_delta(input=second_profile.last_breakup, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông th√™m xem ch·ª´ng n√†o m·ªõi ƒë∆∞·ª£c th·ª±c hi·ªán l·∫°i l·ªánh
                next_time = second_profile.last_breakup + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üíî ƒê·ªëi ph∆∞∆°ng v·ª´a chia tay ng∆∞·ªùi c≈© kh√¥ng l√¢u. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh v√†o l√∫c <t:{unix_time}:f> !", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
        
        
        chosen_gift = None
        #Ph·∫£i c√≥ √≠t nh·∫•t m·ªôt gift m·ªõi c√≥ th·ªÉ k·∫øt ƒë√¥i
        if first_profile.list_items == None:
            view = SelfDestructView(timeout=60)
            embed = discord.Embed(title=f"B·∫°n ph·∫£i mua √≠t nh·∫•t m·ªôt m√≥n qu√† trong {SlashCommand.SHOP_GLOBAL.value} th√¨ m·ªõi c√≥ th·ªÉ t·∫∑ng qu√† k·∫øt ƒë√¥i!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        else:
            #Ki·ªÉm xem c√≥ gift kh√¥ng
            gift_available = False
            for item in first_profile.list_items:
                if item.item_type == "gift":
                    gift_available = True
                    break
            if gift_available == False:
                view = SelfDestructView(timeout=60)
                embed = discord.Embed(title=f"B·∫°n ph·∫£i mua √≠t nh·∫•t m·ªôt m√≥n qu√† trong {SlashCommand.SHOP_GLOBAL.value} th√¨ m·ªõi c√≥ th·ªÉ t·∫∑ng qu√† k·∫øt ƒë√¥i!",color=discord.Color.blue())
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
            #Ch·ªçn ra gift m·∫Øc nh·∫•t
            chosen_gift = self.get_most_expensive_item(items=first_profile.list_items)
        if chosen_gift == None:
            view = SelfDestructView(timeout=60)
            embed = discord.Embed(title=f"Kh√¥ng th·ªÉ t√¨m ƒë∆∞·ª£c m√≥n qu√† ph√π h·ª£p ƒë·ªÉ k·∫øt ƒë√¥i!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        #T·∫°o embed th√†nh ƒë√¥i
        embed = discord.Embed(title=f"", description=f"**{interaction.user.mention} ƒë√£ b√†y t·ªè t·∫•m l√≤ng v·ªõi {user.mention}**", color=0xddede7)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"{interaction.user.mention} ƒë√£ ƒëem [{chosen_gift.emoji} - **{chosen_gift.item_name}**] ƒë·ªÉ t·∫∑ng cho {user.mention}!", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        view = CouplePairView(user=interaction.user, user_profile=first_profile, target=user, target_profile=second_profile, chosen_gift=chosen_gift)
        mess = await interaction.followup.send(embed=embed, view=view)
        view.old_message = mess
        return
        
    @couple_pair_slash_command.error
    async def couple_pair_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            # Send a cooldown message to the user, formatted nicely
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            # Handle any other errors that might occur
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)

    #region breakup
    @couple_group.command(name="breakup", description="Chia tay v·ªõi c·∫∑p ƒë√¥i c·ªßa b·∫£n th√¢n")
    @discord.app_commands.checks.cooldown(1, 30)
    @discord.app_commands.describe(force="ƒê∆°n ph∆∞∆°ng chia tay m√† kh√¥ng c·∫ßn s·ª± ƒë·ªìng √Ω c·ªßa ƒë·ªëi ph∆∞∆°ng.")
    async def couple_breakup_slash_command(self, interaction: discord.Interaction, force: bool = None):
        await interaction.response.defer(ephemeral=True)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        couple  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if couple == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n l√†m g√¨ c√≥ ng∆∞·ªùi y√™u m√† ƒë√≤i chia tay!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        target_id = None
        if interaction.user.id == couple.first_user_id:
            target_id = couple.second_user_id
        else:
            target_id = couple.first_user_id
        if force == None or force == False:
            await interaction.followup.send(content=f"B·∫°n ƒë√£ quy·∫øt ƒë·ªãnh chia tay v·ªõi c·∫∑p ƒë√¥i c·ªßa m√¨nh!")
            channel = interaction.channel
            #Hi·ªán embed cho ƒë·ªëi ph∆∞∆°ng tr·∫£ l·ªùi
            embed = discord.Embed(title=f"", description=f"{interaction.user.mention} mu·ªën chia tay v·ªõi b·∫°n", color=0xddede7)
            view = CoupleBreakupView(user=interaction.user, couple=couple, target_id=target_id)
            mess = await channel.send(embed=embed, view=view, content= f"<@{couple.first_user_id}> <@{couple.second_user_id}>")
            view.old_message = mess
        else:
            await interaction.followup.send(content=f"B·∫°n ƒë√£ l·∫°nh l√πng chia tay v·ªõi c·∫∑p ƒë√¥i c·ªßa m√¨nh!")
            channel = interaction.channel
            #Xo√° couple v√† tr·ª´ 50 ƒëi·ªÉm nh√¢n ph·∫©m
            CoupleMongoManager.delete_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
            ProfileMongoManager.update_last_breakup_now(guild_id=interaction.guild_id, user_id=couple.first_user_id)
            ProfileMongoManager.update_last_breakup_now(guild_id=interaction.guild_id, user_id=couple.second_user_id)
            ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, guild_name="", user_id=interaction.user.id, user_display_name="", user_name="", dignity_point=-50)
            await channel.send(f"{interaction.user.mention} ƒë√£ nh·∫´n t√¢m chia tay th·∫≥ng th·ª´ng v·ªõi <@{target_id}> m·ªôt c√°ch l·∫°nh l√πng.\n{interaction.user.mention} ƒë√£ m·∫•t **50** ƒëi·ªÉm nh√¢n ph·∫©m!")
            return
        return
        
        
    @couple_breakup_slash_command.error
    async def couple_breakup_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            # Send a cooldown message to the user, formatted nicely
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            # Handle any other errors that might occur
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)



    def get_most_expensive_item(self, items):
        type_multiplier = {
            "C": 1,
            "S": 100,
            "G": 10000,
            "D": 1000000
        }
        items.sort(key=lambda item: item.item_type == "gift" and item.item_worth_amount * type_multiplier[item.item_worth_type])
        return items[-1]
