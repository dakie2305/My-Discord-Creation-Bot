import discord
from discord.ext import commands
from discord.app_commands import Choice
import Handling.Economy.Profile.ProfileMongoManager as ProfileMongoManager
from Handling.Misc.SelfDestructView import SelfDestructView
from CustomEnum.SlashEnum import SlashCommand
from CustomEnum.EmojiEnum import EmojiCreation2
from Handling.Misc.UtilitiesFunctionsEconomy import UtilitiesFunctions
from Handling.Economy.Couple.CouplePairView import CouplePairView
from Handling.Economy.Couple.CoupleBreakupView import CoupleBreakupView
from Handling.Economy.Couple.CoupleMarryView import CoupleMarryView
import CustomFunctions
import CustomEnum.UserEnum as UserEnum
import Handling.Economy.Couple.CoupleMongoManager as CoupleMongoManager
from datetime import datetime, timedelta
import random

async def setup(bot: commands.Bot):
    await bot.add_cog(CoupleCog(bot=bot))
    print("Couple is ready!")

class CoupleCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    couple_group = discord.app_commands.Group(name="couple", description="C√°c l·ªánh li√™n quan ƒë·∫øn Couple!")
    #region pair
    @couple_group.command(name="pair", description="K·∫øt ƒë√¥i v·ªõi m·ªôt ng∆∞·ªùi b·∫•t k·ª≥")
    @discord.app_commands.checks.cooldown(1, 30)
    @discord.app_commands.describe(user="Ng∆∞·ªùi m√† b·∫°n mu·ªën th√†nh ƒë√¥i tri k·ªâ.")
    async def couple_pair_slash_command(self, interaction: discord.Interaction, user: discord.Member):
        await interaction.response.defer(ephemeral=False)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        if user.bot and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng th·ªÉ th√†nh ƒë√¥i v·ªõi bot ƒë∆∞·ª£c!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        if user.id == interaction.user.id:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng th·ªÉ t·ª± th√†nh ƒë√¥i v·ªõi b·∫£n th√¢n ƒë∆∞·ª£c!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        #Ki·ªÉm tra xem c·∫£ hai ƒë√£ l√† ƒë√¥i c·ªßa ai kh√°c ch∆∞a
        first_user_check  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if first_user_check != None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n ƒë√£ c√≥ b·∫°n k·∫øt ƒë√¥i, kh√¥ng ƒë∆∞·ª£c ph√©p l·∫≠p harem! Mu·ªën k·∫øt ƒë√¥i ng∆∞·ªùi kh√°c th√¨ chia tay ng∆∞·ªùi c≈© ƒëi!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        second_user_check  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=user.id)
        if second_user_check != None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"ƒê·ªëi ph∆∞∆°ng l√† hoa ƒë√£ c√≥ ch·ªß!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        
        first_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if first_profile == None:
            first_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=interaction.user.id, user_name=interaction.user.name, user_display_name=interaction.user.display_name)
        
        time_window = timedelta(days=3)
        if first_profile.last_breakup != None:
            check = UtilitiesFunctions.check_if_within_time_delta(input=first_profile.last_breakup, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông th√™m xem ch·ª´ng n√†o m·ªõi ƒë∆∞·ª£c th·ª±c hi·ªán l·∫°i l·ªánh
                next_time = first_profile.last_breakup + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üíî B·∫°n v·ª´a chia tay ng∆∞·ªùi c≈© kh√¥ng l√¢u. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh v√†o l√∫c <t:{unix_time}:f> !", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
        
        
        
        second_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=user.id)
        if second_profile == None:
            second_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=user.id, user_name=user.name, user_display_name=user.display_name)
        
        if second_profile.last_breakup != None:
            check = UtilitiesFunctions.check_if_within_time_delta(input=second_profile.last_breakup, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông th√™m xem ch·ª´ng n√†o m·ªõi ƒë∆∞·ª£c th·ª±c hi·ªán l·∫°i l·ªánh
                next_time = second_profile.last_breakup + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üíî ƒê·ªëi ph∆∞∆°ng v·ª´a chia tay ng∆∞·ªùi c≈© kh√¥ng l√¢u. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh v√†o l√∫c <t:{unix_time}:f> !", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
        
        
        chosen_gift = None
        #Ph·∫£i c√≥ √≠t nh·∫•t m·ªôt gift m·ªõi c√≥ th·ªÉ k·∫øt ƒë√¥i
        if first_profile.list_items == None:
            view = SelfDestructView(timeout=60)
            embed = discord.Embed(title=f"B·∫°n ph·∫£i mua √≠t nh·∫•t m·ªôt m√≥n qu√† trong {SlashCommand.SHOP_GLOBAL.value} th√¨ m·ªõi c√≥ th·ªÉ t·∫∑ng qu√† k·∫øt ƒë√¥i!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        else:
            #Ki·ªÉm xem c√≥ gift kh√¥ng
            gift_available = False
            for item in first_profile.list_items:
                if item.item_type == "gift":
                    gift_available = True
                    break
            if gift_available == False:
                view = SelfDestructView(timeout=60)
                embed = discord.Embed(title=f"B·∫°n ph·∫£i mua √≠t nh·∫•t m·ªôt m√≥n qu√† trong {SlashCommand.SHOP_GLOBAL.value} th√¨ m·ªõi c√≥ th·ªÉ t·∫∑ng qu√† k·∫øt ƒë√¥i!",color=discord.Color.blue())
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
            #Ch·ªçn ra gift m·∫Øc nh·∫•t
            chosen_gift = self.get_most_expensive_item(items=first_profile.list_items)
        if chosen_gift == None:
            view = SelfDestructView(timeout=60)
            embed = discord.Embed(title=f"Kh√¥ng th·ªÉ t√¨m ƒë∆∞·ª£c m√≥n qu√† ph√π h·ª£p ƒë·ªÉ k·∫øt ƒë√¥i!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        #T·∫°o embed th√†nh ƒë√¥i
        embed = discord.Embed(title=f"", description=f"**{interaction.user.mention} ƒë√£ b√†y t·ªè t·∫•m l√≤ng v·ªõi {user.mention}**", color=0xddede7)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"{interaction.user.mention} ƒë√£ ƒëem [{chosen_gift.emoji} - **{chosen_gift.item_name}**] ƒë·ªÉ t·∫∑ng cho {user.mention}!", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        view = CouplePairView(user=interaction.user, user_profile=first_profile, target=user, target_profile=second_profile, chosen_gift=chosen_gift)
        mess = await interaction.followup.send(embed=embed, view=view)
        view.old_message = mess
        return
        
    @couple_pair_slash_command.error
    async def couple_pair_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            # Send a cooldown message to the user, formatted nicely
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            # Handle any other errors that might occur
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)

    #region breakup
    @couple_group.command(name="breakup", description="Chia tay v·ªõi c·∫∑p ƒë√¥i c·ªßa b·∫£n th√¢n")
    @discord.app_commands.checks.cooldown(1, 30)
    @discord.app_commands.describe(force="ƒê∆°n ph∆∞∆°ng chia tay m√† kh√¥ng c·∫ßn s·ª± ƒë·ªìng √Ω c·ªßa ƒë·ªëi ph∆∞∆°ng.")
    async def couple_breakup_slash_command(self, interaction: discord.Interaction, force: bool = None):
        await interaction.response.defer(ephemeral=True)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        # if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
        #     view = SelfDestructView(timeout=30)
        #     embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
        #     mess = await interaction.followup.send(embed=embed, view=view)
        #     view.message = mess
        #     return
        
        couple  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if couple == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n l√†m g√¨ c√≥ ng∆∞·ªùi y√™u m√† ƒë√≤i chia tay!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        target_id = None
        if interaction.user.id == couple.first_user_id:
            target_id = couple.second_user_id
        else:
            target_id = couple.first_user_id
        if force == None or force == False:
            channel = interaction.channel
            #Hi·ªán embed cho ƒë·ªëi ph∆∞∆°ng tr·∫£ l·ªùi
            embed = discord.Embed(title=f"", description=f"{interaction.user.mention} mu·ªën chia tay v·ªõi b·∫°n", color=0xddede7)
            view = CoupleBreakupView(user=interaction.user, couple=couple, target_id=target_id)
            mess = await channel.send(embed=embed, view=view, content= f"<@{couple.first_user_id}> <@{couple.second_user_id}>")
            view.old_message = mess
            await interaction.followup.send(content=f"B·∫°n ƒë√£ quy·∫øt ƒë·ªãnh chia tay v·ªõi c·∫∑p ƒë√¥i c·ªßa m√¨nh!")
        else:
            await interaction.followup.send(content=f"B·∫°n ƒë√£ l·∫°nh l√πng chia tay v·ªõi c·∫∑p ƒë√¥i c·ªßa m√¨nh!")
            channel = interaction.channel
            #Xo√° couple v√† tr·ª´ 50 ƒëi·ªÉm nh√¢n ph·∫©m
            CoupleMongoManager.delete_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
            ProfileMongoManager.update_last_breakup_now(guild_id=interaction.guild_id, user_id=couple.first_user_id)
            ProfileMongoManager.update_last_breakup_now(guild_id=interaction.guild_id, user_id=couple.second_user_id)
            ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, guild_name="", user_id=interaction.user.id, user_display_name="", user_name="", dignity_point=-50)
            await channel.send(f"{interaction.user.mention} ƒë√£ nh·∫´n t√¢m chia tay th·∫≥ng th·ª´ng v·ªõi <@{target_id}> m·ªôt c√°ch l·∫°nh l√πng.\n{interaction.user.mention} ƒë√£ m·∫•t **50** ƒëi·ªÉm nh√¢n ph·∫©m!")
            return
        return
        
        
    @couple_breakup_slash_command.error
    async def couple_breakup_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            # Send a cooldown message to the user, formatted nicely
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            # Handle any other errors that might occur
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)

    #region intimate
    @couple_group.command(name="intimate", description="Th√¢n m·∫≠t c√πng v·ªõi ƒë·ªëi ph∆∞∆°ng")
    @discord.app_commands.checks.cooldown(1, 30)
    async def couple_intimate_slash_command(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        #Kh√¥ng cho th·ª±c hi·ªán n·∫øu c√≤n jail_time
        if user_profile != None and user_profile.jail_time != None:
            if user_profile.jail_time > datetime.now():
                unix_time = int(user_profile.jail_time.timestamp())
                view = SelfDestructView(timeout=30)
                embed = discord.Embed(title=f"", description=f"‚õìÔ∏è B·∫°n ƒë√£ b·ªã ch√≠nh quy·ªÅn b·∫Øt gi·ªØ r·ªìi, vui l√≤ng ƒë·ª£i ƒë·∫øn <t:{unix_time}:t> !", color=0xc379e0)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
            else:
                ProfileMongoManager.update_jail_time(guild_id=interaction.guild_id, user_id=interaction.user.id, jail_time=None)
        
        couple  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if couple == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n l√†m g√¨ c√≥ ng∆∞·ªùi y√™u ƒë√¢u?!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        if couple.last_love_action != None:
            time_window = timedelta(minutes=30)
            check = UtilitiesFunctions.check_if_within_time_delta(input=couple.last_love_action, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông v√†o 1h xem ch·ª´ng n√†o m·ªõi l√†m ti·∫øp
                work_next_time = couple.last_love_action + time_window
                unix_time = int(work_next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ h·∫πn h√≤ r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh {SlashCommand.COUPLE_INTIMATE.value} v√†o l√∫c <t:{unix_time}:t> !", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view)
                return
        
        
        target_id = None
        if interaction.user.id == couple.first_user_id:
            target_id = couple.second_user_id
        else:
            target_id = couple.first_user_id
            
        #"user.id v√† target_id quy·∫øt ƒë·ªãnh ch·ªçn ƒëi... ƒë·ªÉ c·∫£i thi·ªán t√¨nh c·∫£m c·∫£ hai "
        random_date_choice = ["h·∫πn h√≤", "h√¢m n√≥ng t√¨nh c·∫£m", "·∫•y ·∫•y", "ch∆°i b·ªüi", "qu·∫©y bar", "ƒÉn u·ªëng", "x·∫≠p x√¨nh", "d·∫´y ph·ªë", "ph√° l√†ng ph√° x√≥m", "h√≤ h·∫πn", "ch∆°i v√≤ng v√≤ng", "d·∫°o ph·ªë", "l√™n bar", "cafe", "tri·ªÉn l√£m l·ªãch s·ª≠", "tham gia show c·ªßa anh Jack 97", "g·∫∑p anh Jack 97"]
        #"·ªü..."
        random_date_place = ["ƒë·ªãa ng·ª•c", "ƒê√† L·∫°t", "bi·ªÉn", "vƒÉn ph√≤ng C√¥ng An T·ªânh", "Nha Trang", "V≈©ng T√†u", "Phan Thi·∫øt", "Ph·ªë ƒêi B·ªô", "c√¥ng vi√™n g·∫ßn nh√†", "kh√°ch s·∫°n", "nh√† ngh·ªâ","nh√† tr·ªç", "M≈©i N√©", "Cam Ranh", "Th√°i Lan", "C√† Mau", "Tr√† Vinh", "M·ªπ", "Anh", "nghƒ©a ƒë·ªãa", "nghƒ©a trang", "ƒë·ªìi th√¥ng hai m·ªô", "nh√† ma", "ƒë·∫°i h·ªçc FPT", "ƒë·∫°i h·ªçc HUTECH", "qu√°n net g·∫ßn nh√†"]
        #succes
        random_success_message = [
            "{second_person} ƒë√£ c·∫£m th·∫•y r·∫•t ·∫•n t∆∞·ª£ng v·ªõi v·∫ª ƒë·∫πp c·ªßa n∆°i n√†y, v√† √¥m {first_person} th·∫≠t l√¢u",
            "{second_person} nh∆∞ b·ªã h·ªõp h·ªìn b·ªüi n∆°i n√†y, v√† h√¥n {first_person} th·∫≠t l√¢u",
            "{first_person} ƒë√£ h√¥n {second_person} th·∫≠t s√¢u trong khung c·∫£nh l√£ng m·∫°n n√†y",
            "{second_person} r·∫•t th√≠ch n∆°i tuy·ªát v·ªùi n√†y",
            "{second_person} v√† {first_person} ƒë√£ r·∫•t h·∫°nh ph√∫c ·ªü n∆°i ƒë√¢y",
            "{first_person} ƒë√£ nh·∫π nh√†ng ƒë·∫∑t m·ªôt n·ª• h√¥n l√™n m√° {second_person}",
            "{first_person} ƒë√£ d√†nh t·∫∑ng {second_person} m·ªôt b√≥ hoa h·ªìng ƒë·ªè th·∫Øm",
            "{first_person} ƒë√£ c√πng {second_person} ƒÉn b·ªØa t·ªëi vui v·∫ª ·ªü n∆°i ƒë√¢y",
            "{second_person} c√πng {first_person} du ngo·∫°n n∆°i n√†y v√† d√†nh nhi·ªÅu th·ªùi gian y√™n b√¨nh b√™n nhau",
            "{second_person} ƒë√£ c√πng {first_person} \"n·ªìng th·∫Øm\" v·ªõi nhau t·∫°i n∆°i tuy·ªát v·ªùi n√†y",
            "{second_person} r·∫•t tr·∫ßm tr·ªì v√¨ n∆°i n√†y, v√† ƒë√£ c√πng {first_person} d√†nh th·ªùi gian \"√¢n √°i\" v·ªõi nhau t·∫°i ƒë√¢y",
        ]
        #Fail
        random_fail_message = [
            "{second_person} ƒë√£ v√¥ t√¨nh l√†m ƒë·ªï n∆∞·ªõc l√™n {first_person} v√† l√†m h·ªèng chi·∫øc ƒëi·ªán tho·∫°i m·ªõi c·ªßa {first_person}",
            "{first_person} v√† {second_person} ƒë√£ b·ªã l·∫°c ƒë∆∞·ªùng v√† ph·∫£i ƒëi b·ªô v·ªÅ nh√† trong ƒë√™m t·ªëi",
            "{second_person} ƒë√£ v√¥ t√¨nh l√†m h·ªèng m√≥n qu√† m√† {first_person} chu·∫©n b·ªã",
            "{first_person} v√† {second_person} ƒë√£ m·∫Øc m∆∞a l·ªõn v√† ∆∞·ªõt s≈©ng ng∆∞·ªùi",
            "{first_person} v√† {second_person} ƒë√£ b·ªã  fan anh Jack 97 c∆∞·ªõp m·∫•t ti·ªÅn",
            "{second_person} ƒë√£ v√¥ t√¨nh g·ªçi nh·∫ßm t√™n ng∆∞·ªùi y√™u c≈© tr∆∞·ªõc m·∫∑t {first_person}",
            "{second_person} ƒë√£ b·ªã ng∆∞·ªùi y√™u c≈© b·∫Øt g·∫∑p khi ƒëang h·∫πn h√≤ v·ªõi {first_person}",
            "{first_person} ƒë√£ n√≥i m·ªôt ƒëi·ªÅu g√¨ ƒë√≥ r·∫•t ng·ªõ ng·∫©n v√† khi·∫øn {second_person} c·∫£m th·∫•y x·∫•u h·ªï",
            "{second_person} ƒë√£ kh√¥ng xu·∫•t hi·ªán ƒë√∫ng h·∫πn, khi·∫øn {first_person} ph·∫£i ch·ªù ƒë·ª£i r·∫•t l√¢u",
        ]
        date_choice = random.choice(random_date_choice)
        date_place = random.choice(random_date_place)
        is_success = UtilitiesFunctions.get_chance(70)
        result = random.choice(random_success_message)
        bonus_love_point = 10
        bonus_love_rank_exp = random.randint(20, 60)
        if is_success == False:
            result = random.choice(random_fail_message)
            bonus_love_point = bonus_love_point*(-1)
        result = result.replace("{first_person}", interaction.user.mention)
        result = result.replace("{second_person}", f"<@{target_id}>")
        
        text = f"Trong bu·ªïi h·∫πn t·ªõi, {interaction.user.mention} v√† <@{target_id}> ƒë√£ quy·∫øt ƒë·ªãnh ch·ªçn ƒëi {date_choice} ·ªü {date_place}."
        text += f"\n{result}."
        embed = discord.Embed(title=f"", description=f"", color=0xddede7)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"{text}", inline=False)
        embed.add_field(name=f"", value=f"**K·∫øt qu·∫£ bu·ªïi h·∫πn:**", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} **{bonus_love_rank_exp}** ƒêi·ªÉm thƒÉng hoa c·∫£m x√∫c", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} **{bonus_love_point}** ƒêi·ªÉm th√¢n m·∫≠t", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        
        CoupleMongoManager.update_love_point(guild_id=interaction.guild_id,user_id=interaction.user.id, love_point=bonus_love_point)
        CoupleMongoManager.update_love_progressing(guild_id=interaction.guild_id,user_id=interaction.user.id, bonus_exp=bonus_love_rank_exp)
        ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, guild_name="", user_id=interaction.user.id, user_name=interaction.user.name, user_display_name=interaction.user.display_name, dignity_point=5)
        ProfileMongoManager.update_level_progressing(guild_id=interaction.guild_id, user_id=interaction.user.id)
        ProfileMongoManager.update_level_progressing(guild_id=interaction.guild_id, user_id=target_id)
        #C·∫≠p nh·∫≠t l·∫°i th·ªùi gian
        CoupleMongoManager.update_last_date_time_now(guild_id=interaction.guild_id, user_id=interaction.user.id, is_last_love_action=True)
        await interaction.followup.send(embed=embed)
    
    @couple_intimate_slash_command.error
    async def couple_intimate_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            # Send a cooldown message to the user, formatted nicely
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            # Handle any other errors that might occur
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)

    #region fight
    @couple_group.command(name="fight", description="C√£i v√£ v·ªõi ƒë·ªëi ph∆∞∆°ng")
    @discord.app_commands.checks.cooldown(1, 30)
    async def couple_fight_slash_command(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        #Kh√¥ng cho th·ª±c hi·ªán n·∫øu c√≤n jail_time
        if user_profile != None and user_profile.jail_time != None:
            if user_profile.jail_time > datetime.now():
                unix_time = int(user_profile.jail_time.timestamp())
                view = SelfDestructView(timeout=30)
                embed = discord.Embed(title=f"", description=f"‚õìÔ∏è B·∫°n ƒë√£ b·ªã ch√≠nh quy·ªÅn b·∫Øt gi·ªØ r·ªìi, vui l√≤ng ƒë·ª£i ƒë·∫øn <t:{unix_time}:t> !", color=0xc379e0)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
            else:
                ProfileMongoManager.update_jail_time(guild_id=interaction.guild_id, user_id=interaction.user.id, jail_time=None)
        
        couple  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if couple == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n l√†m g√¨ c√≥ ng∆∞·ªùi y√™u ƒë√¢u?!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        if couple.last_fight_action != None:
            time_window = timedelta(hours=1)
            check = UtilitiesFunctions.check_if_within_time_delta(input=couple.last_fight_action, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông v√†o 1h xem ch·ª´ng n√†o m·ªõi l√†m ti·∫øp
                work_next_time = couple.last_fight_action + time_window
                unix_time = int(work_next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ c√£i nhau r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh {SlashCommand.COUPLE_FIGHT.value} v√†o l√∫c <t:{unix_time}:t> !", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view)
                return
        target_id = None
        if interaction.user.id == couple.first_user_id:
            target_id = couple.second_user_id
        else:
            target_id = couple.first_user_id
        
        #"user.id c·∫£m th·∫•y...
        random_hard_feeling = [
            "kh√¥ng th√≠ch c√°ch ƒÉn m·∫∑c c·ªßa {second_person}",
            "kh√¥ng ∆∞a t√≠nh h·ªèi nhi·ªÅu v·ªÅ {second_person}",
            "kh√¥ng vui v·ªÅ th√°i ƒë·ªô c·ªçc c·∫±n c·ªßa {second_person}",
            "kh√¥ng vui g√¨ khi th·∫•y {second_person} l√†m h∆∞ ƒë·ªì m√¨nh",
            "kh√¥ng th√≠ch khi th·∫•y {second_person} c√≤n l∆∞u ·∫£nh ng∆∞·ªùi y√™u c≈©",
            "b·ª±c b·ªôi v√¨ ƒë√£ th·∫•y {second_person} n√≥i chuy·ªán v·ªõi ng∆∞·ªùi y√™u c≈©",
            "kh√≥ ch·ªãu v√¨ {second_person} chi·∫øn tranh l·∫°nh v·ªõi m√¨nh",
            "kh√≥ ch·ªãu khi {second_person} l√†m m·∫•t c√°i √°o c·ªßa m√¨nh",
            "kh√≥ ch·ªãu khi {second_person} l√†m v·ª° m√†n h√¨nh ƒëi·ªán tho·∫°i",
            "ƒëau l√≤ng khi {second_person} kh√¥ng nh·ªõ ng√†y sinh c·ªßa m√¨nh",
            "kh√≥ ch·ªãu v√¨ c·∫£m th·∫•y b·ªã {second_person} xem nh·∫π, kh√¥ng ƒë∆∞·ª£c ƒë·ªëi x·ª≠ c√¥ng b·∫±ng",
            "kh√≥ ch·ªãu v√¨ c·∫£m th·∫•y b·ªã {second_person} so s√°nh v·ªõi ng∆∞·ªùi c≈©",
            "b·ª±c b·ªôi v√¨ {second_person} l√†m phi·ªÅn trong l√∫c l√†m vi·ªác",
            "kh√¥ng vui v√¨ {second_person} qu·∫•y r·∫ßy gi·∫•c ng·ªß",
            "kh√¥ng vui v√¨ {second_person} ki·ªÉm so√°t qu√° m·ª©c",
            "kh√¥ng vui v√¨ lu√¥n b·ªã {second_person} ƒë·ªï l·ªói",
            "bu·ªìn v√¨ lu√¥n b·ªã {second_person} ch·∫ø gi·ªÖu",
            "bu·ªìn v√¨ {second_person} h·ª©a h·∫πn nh∆∞ng kh√¥ng th·ª±c hi·ªán",
            "bu·ªìn v√¨ {second_person} t·∫°o c·∫£m gi√°c c√¥ ƒë∆°n, l·∫°c l√µng trong m·ªëi quan h·ªá",
            ]
        
        #"v√† quy·∫øt ƒë·ªãnh..."
        random_decision_message = [
            "n√≥i cho ra l·∫Ω",
            "ch·ª≠i m·ªôt tr·∫≠n th·∫≠t n·∫∑ng",
            "hai m·∫∑t m·ªôt l·ªùi cho r√µ r√†ng",
            "n√≥i chuy·ªán th·∫≥ng m·∫∑t cho th·∫≠t r√µ s·ª± t√¨nh",
            "n√≥i b√≥ng n√≥i gi√≥ v·ªÅ chuy·ªán ƒë√≥",
            "t·ªè r√µ th√°i ƒë·ªô kh√¥ng h√†i l√≤ng",
            "chi·∫øn tranh l·∫°nh v√† kh√¥ng mu·ªën n√≥i chuy·ªán n·ªØa",
            "n√≥i x·∫•u v·ªÅ {second_person} v·ªõi b·∫°n b√®",
            "n·∫∑ng nh·∫π v·ªÅ s·ª± vi·ªác ƒë√≥",
            "nh·∫π nh√†ng b·∫£o ban v·ªÅ chuy·ªán ƒë√≥",
            "nh·∫π nh√†ng n√≥i chuy·ªán cho ra l·∫Ω",
            "b·ªè ƒëi m√† kh√¥ng n√≥i l·ªùi n√†o.",
            "b·ªè ƒÉn, b·ªè ng·ªß.",
            "t·ª± c√¥ l·∫≠p b·∫£n th√¢n",
            "c·ªë t√¨nh g√¢y s·ª± v·ªõi {second_person}",
        ]
        
        #success
        random_success_message = [
            "{second_person} ƒë√£ hi·ªÉu r√µ t·∫°i sao {first_person} c·∫£m th·∫•y v·∫≠y v√† √¥m {first_person} th·∫≠t ch·∫∑t",
            "{second_person} ƒë√£ th·∫•u hi·ªÉu n·ªói t√¨nh c·ªßa {first_person}",
            "{second_person} ƒë√£ √¥m h√¥n {first_person} th·∫≠t l√¢u v√¨ h·ªëi h·∫≠n",
            "{second_person} ƒë√£ h·ª©a s·∫Ω thay ƒë·ªïi v√† kh√¥ng t√°i ph·∫°m l·ªói l·∫ßm",
            "{first_person} v√† {second_person} ƒë√£ c√πng nhau t√¨m ra gi·∫£i ph√°p cho v·∫•n ƒë·ªÅ",
            "{first_person} ƒë√£ tha th·ª© cho {second_person} v√† c·∫£ hai ƒë√£ √¥m nhau th·∫≠t ch·∫∑t",
            "{second_person} ƒë√£ t·∫∑ng {first_person} m·ªôt m√≥n qu√† nh·ªè ƒë·ªÉ th·ªÉ hi·ªán s·ª± h·ªëi h·∫≠n",
            "{first_person} v√† {second_person} ƒë√£ ng·ªìi xu·ªëng, t√¢m s·ª± th·∫≠t l√≤ng v·ªõi nhau v√† gi·∫£i quy·∫øt hi·ªÉu l·∫ßm",
            "{second_person} ƒë√£ n·∫•u cho {first_person} m·ªôt b·ªØa ƒÉn ngon ƒë·ªÉ b√†y t·ªè l·ªùi xin l·ªói",
            "{second_person} ƒë√£ t·ªï ch·ª©c m·ªôt bu·ªïi h·∫πn h√≤ l√£ng m·∫°n ƒë·ªÉ l√†m l√†nh",
            "{first_person} v√† {second_person} ƒë√£ c√πng nhau chia s·∫ª nh·ªØng n·ªói s·ª£ h√£i v√† mong mu·ªën c·ªßa m√¨nh",
            "{first_person} v√† {second_person} ƒë√£ nh·∫≠n ra r·∫±ng t√¨nh c·∫£m c·ªßa nhau m·ªõi l√† th·∫≠t s·ª± quan tr·ªçng",
            "{first_person} v√† {second_person} ƒë√£ c√πng nhau n·∫•u ƒÉn, c∆∞·ªùi ƒë√πa v√† h√†n g·∫Øn m·ªëi quan h·ªá",
            "{first_person} v√† {second_person} ƒë√£ c√πng nhau ng·∫Øm sao tr·ªùi v√† tr√≤ chuy·ªán t√¢m s·ª±",
        ]
        #Fail
        random_fail_message = [
            "{second_person} ƒë√£ c·∫£m th·∫•y b·ªã x√∫c ph·∫°m b·ªüi l·ªùi n√≥i c·ªßa {first_person}",
            "{first_person} c·∫£m th·∫•y nh∆∞ th·ªÉ {second_person} kh√¥ng h·ªÅ l·∫Øng nghe m√¨nh v√† ch·ªâ h·ª©a su√¥ng",
            "{second_person} kh√¥ng vui v·ªõi th√°i ƒë·ªô ch·ªâ tr√≠ch c·ªßa {first_person}",
            "{second_person} th·∫•y bu·ªìn v√¨ {first_person} ƒë√£ kh√°c tr∆∞·ªõc",
            "{second_person} th·∫•y bu·ªìn v√¨ {first_person} tr√¥ng nh∆∞ kh√¥ng c√≤n quan t√¢m m√¨nh",
            "{second_person} gi·∫≠n ng∆∞·ª£c l·∫°i {first_person}",
            "{second_person} ƒë√£ kh√¥ng ch·ªãu xin l·ªói {first_person}",
            "{first_person} v√† {second_person} ƒë√£ kh√¥ng th·ªÉ t√¨m ƒë∆∞·ª£c ti·∫øng n√≥i chung",
            "{first_person} v√† {second_person} c√£i nhau to th√™m ch·ªâ v√¨ chuy·ªán ƒë√≥",
            "{first_person} ƒë√£ m·∫•t ni·ªÅm tin v√†o t√¨nh c·∫£m c·ªßa {second_person}",
            "{first_person} v√† {second_person} ƒë√£ kh√¥ng th·ªÉ h√†n g·∫Øn m·ªëi quan h·ªá",
            "{second_person} trong c∆°n t·ª©c gi·∫≠n ƒë√£ n√©m ƒë·ªì ƒë·∫°c",
            "{second_person} ƒë√£ b·ªè ƒëi m√† kh√¥ng th√®m ch·ªãu nghe gi·∫£i th√≠ch",
            "{second_person} ch·ªâ xin l·ªói h·ªùi h·ª£t cho c√≥, v√† {first_person} c·∫£m th·∫•y m·ªát m·ªèi v·ªõi m·ªëi quan h·ªá n√†y",
            "{second_person} ƒë√£ c·ªë t√¨nh l√†m t·ªïn th∆∞∆°ng {first_person} b·∫±ng c√°ch nh·∫Øc l·∫°i nh·ªØng l·ªói l·∫ßm trong qu√° kh·ª©",
        ]
        hard_feeling = random.choice(random_hard_feeling)
        decision_message = random.choice(random_decision_message)
        is_success = UtilitiesFunctions.get_chance(50)
        result = random.choice(random_success_message)
        bonus_love_point = 30
        bonus_love_rank_exp = random.randint(50, 100)
        if is_success == False:
            result = random.choice(random_fail_message)
            bonus_love_point = 20
            bonus_love_point = bonus_love_point*(-1)
        hard_feeling = hard_feeling.replace("{first_person}", interaction.user.mention)
        hard_feeling = hard_feeling.replace("{second_person}", f"<@{target_id}>")
        decision_message = decision_message.replace("{first_person}", interaction.user.mention)
        decision_message = decision_message.replace("{second_person}", f"<@{target_id}>")
        result = result.replace("{first_person}", interaction.user.mention)
        result = result.replace("{second_person}", f"<@{target_id}>")
        
        text = f"{interaction.user.mention} c·∫£m th·∫•y {hard_feeling} v√† quy·∫øt ƒë·ªãnh s·∫Ω {decision_message}."
        text += f"\n{result}."
        embed = discord.Embed(title=f"", description=f"", color=0xddede7)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"{text}", inline=False)
        embed.add_field(name=f"", value=f"**K·∫øt qu·∫£:**", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} **{bonus_love_rank_exp}** T·ªâ l·ªá thƒÉng hoa c·∫£m x√∫c", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} **{bonus_love_point}** ƒêi·ªÉm th√¢n m·∫≠t", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        
        CoupleMongoManager.update_love_point(guild_id=interaction.guild_id,user_id=interaction.user.id, love_point=bonus_love_point)
        CoupleMongoManager.update_last_date_time_now(guild_id=interaction.guild_id, user_id=interaction.user.id, is_last_fight_action=True)
        CoupleMongoManager.update_love_progressing(guild_id=interaction.guild_id,user_id=interaction.user.id, bonus_exp=bonus_love_rank_exp)
        ProfileMongoManager.update_level_progressing(guild_id=interaction.guild_id, user_id=interaction.user.id)
        ProfileMongoManager.update_level_progressing(guild_id=interaction.guild_id, user_id=target_id)
        ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, user_id=target_id, guild_name="", user_name="", user_display_name="", dignity_point=5)
        await interaction.followup.send(embed=embed)
    
    @couple_fight_slash_command.error
    async def couple_fight_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            # Send a cooldown message to the user, formatted nicely
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            # Handle any other errors that might occur
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)
    
    #region marry
    @couple_group.command(name="marry", description="C∆∞·ªõi c·∫∑p ƒë√¥i c·ªßa m√¨nh!")
    @discord.app_commands.checks.cooldown(1, 30)
    async def couple_marry_slash_command(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        #Kh√¥ng cho th·ª±c hi·ªán n·∫øu c√≤n jail_time
        if user_profile != None and user_profile.jail_time != None:
            if user_profile.jail_time > datetime.now():
                unix_time = int(user_profile.jail_time.timestamp())
                view = SelfDestructView(timeout=30)
                embed = discord.Embed(title=f"", description=f"‚õìÔ∏è B·∫°n ƒë√£ b·ªã ch√≠nh quy·ªÅn b·∫Øt gi·ªØ r·ªìi, vui l√≤ng ƒë·ª£i ƒë·∫øn <t:{unix_time}:t> !", color=0xc379e0)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
            else:
                ProfileMongoManager.update_jail_time(guild_id=interaction.guild_id, user_id=interaction.user.id, jail_time=None)
        
        if user_profile.list_items == None or len(user_profile.list_items) == 0:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.SHOP_GLOBAL.value} ƒë·ªÉ mua Nh·∫´n Kim C∆∞∆°ng!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        couple  = CoupleMongoManager.find_couple_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if couple == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n l√†m g√¨ c√≥ ng∆∞·ªùi y√™u ƒë√¢u?!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        elif couple.date_married != None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"B·∫°n ƒë√£ l√†m ƒë√°m c∆∞·ªõi r·ªìi m√†?!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        chosen_item = None
        #C·∫ßn ph·∫£i c√≥ nh·∫´n kim c∆∞∆°ng ƒë·ªÉ c∆∞·ªõi nhau
        for item in user_profile.list_items:
            if item.item_id == "g_dring":
                chosen_item = item
                break
        if chosen_item == None:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.SHOP_GLOBAL.value} ƒë·ªÉ mua Nh·∫´n Kim C∆∞∆°ng!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        if couple.love_rank == 19 and couple.love_progressing >= 990 and couple.love_point >= 90:
            gif_links = [
            "https://i.pinimg.com/originals/10/d9/d3/10d9d362a1532da2e7916ed4da2cec46.gif",
            "https://i.pinimg.com/originals/3f/4d/5f/3f4d5f06e024ccce77a9249ff30db093.gif",
            "https://i.pinimg.com/originals/65/0c/3b/650c3bf600925ca4458ece0b464ca204.gif",
            "https://i.pinimg.com/originals/81/c2/7e/81c27e549a30d9d006464a21d038a2c6.gif",
            "https://i.pinimg.com/originals/a1/9d/78/a19d784a8f8cb7d832d5e50a86bfbf1a.gif",
            "https://i.pinimg.com/originals/d1/56/ea/d156ea8eb781ef680e91ea8764e3eaca.gif",
        ]
            gif = random.choice(gif_links)
        
            date_created = couple.date_created
            unix_time = int(date_created.timestamp())
            #T·∫°o embed c∆∞·ªõi nhau
            embed = discord.Embed(title=f"ƒê√°m C∆∞·ªõi T√¢n Uy√™n ∆Ø∆°ng",color=discord.Color.blue())
            embed.add_field(name=f"", value=f"C·∫∑p ƒë√¥i uy√™n ∆∞∆°ng <@{couple.first_user_id}> -`{UtilitiesFunctions.get_heart_emoji_on_rank(couple.love_rank)}¬¥- <@{couple.second_user_id}> ƒë√£ v·ªÅ chung m·ªôt nh√†!", inline=False)
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} Ng√†y l√†nh quen nhau: <t:{unix_time}:D>", inline=False)
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} ƒêi·ªÉm th√¢n m·∫≠t **{couple.love_point}**", inline=False)
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            embed.set_image(url=gif)
            CoupleMongoManager.update_married_time_now(guild_id=interaction.guild_id, user_id=interaction.user.id)
            view = CoupleMarryView(couple=couple, gif=gif, timeout=60)
            mess = await interaction.followup.send(embed=embed, view = view)
            view.old_message = mess
            view.guild = interaction.guild
            await view.start_countdown()
            return
        else:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ c∆∞·ªõi",color=discord.Color.blue())
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            embed.add_field(name=f"", value=f"C·∫∑p ƒë√¥i c·∫ßn ph·∫£i ƒë·∫°t h·∫øt ƒëi·ªÅu ki·ªán d∆∞·ªõi ƒë√¢y m·ªõi c√≥ th·ªÉ c∆∞·ªõi nhau:", inline=False)
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} T√¨nh tr·∫°ng c·∫∑p ƒë√¥i c·∫ßn ph·∫£i ƒë·∫°t **19**", inline=False)
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} T·ªâ l·ªá thƒÉng hoa c·∫£m x√∫c ph·∫£i **99%**", inline=False)
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} ƒêi·ªÉm th√¢n m·∫≠t c≈©ng ph·∫£i ƒë·∫°t tr√™n **90**", inline=False)
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
    @couple_marry_slash_command.error
    async def couple_marry_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            # Send a cooldown message to the user, formatted nicely
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            # Handle any other errors that might occur
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)
    
        
    
    
    def get_most_expensive_item(self, items):
        type_multiplier = {
            "C": 1,
            "S": 100,
            "G": 10000,
            "D": 1000000
        }
        items.sort(key=lambda item: item.item_type == "gift" and item.item_worth_amount * type_multiplier[item.item_worth_type])
        return items[-1]
