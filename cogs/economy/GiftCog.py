import discord
from discord.ext import commands
from discord.app_commands import Choice
from typing import Optional
from Handling.Economy.Profile.ProfileClass import Profile
import Handling.Economy.Profile.ProfileMongoManager as ProfileMongoManager
from Handling.Misc.SelfDestructView import SelfDestructView
from Handling.Economy.Authority.AuthorityView import AuthorityView
from enum import Enum
from CustomEnum.SlashEnum import SlashCommand
from CustomEnum.EmojiEnum import EmojiCreation2
import CustomEnum.UserEnum as UserEnum
import CustomFunctions
import CustomEnum.UserEnum as UserEnum
from Handling.Economy.Gift.GiftView import GiftView
from datetime import datetime, timedelta

async def setup(bot: commands.Bot):
    await bot.add_cog(GiftEconomy(bot=bot))
    print("Gift Economy is ready!")

class GiftEconomy(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    #region gift
    @discord.app_commands.command(name="gift", description="T·∫∑ng v·∫≠t ph·∫©m cho ng∆∞·ªùi kh√°c")
    @discord.app_commands.describe(user="Ch·ªçn user mu·ªën t·∫∑ng.")
    async def gift_slash_command(self, interaction: discord.Interaction, user: discord.Member):
        await interaction.response.defer(ephemeral=False)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        if user.id == interaction.user.id:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng ƒë∆∞·ª£c t·∫∑ng cho b·∫£n th√¢n!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        if user.bot:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng ƒë∆∞·ª£c t·∫∑ng cho bot!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            embed = discord.Embed(title=f"", description=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£.", color=0xddede7)
            embed.add_field(name=f"", value=f"Ngo√†i ra, b·∫°n c·∫ßn ph·∫£i ki·∫øm ti·ªÅn ƒë·ªÉ v√†o mua ƒë·ªì trong {SlashCommand.SHOP_GLOBAL.value} tr∆∞·ªõc!", inline=False)
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        elif user_profile != None and (user_profile.list_items == None or len(user_profile.list_items) <= 0):
            embed = discord.Embed(title=f"", description=f"B·∫°n kh√¥ng c√≥ v·∫≠t ph·∫©m g√¨ ƒë·ªÉ t·∫∑ng h·∫øt.", color=0xddede7)
            embed.add_field(name=f"", value=f"B·∫°n c·∫ßn ph·∫£i ki·∫øm ti·ªÅn ƒë·ªÉ v√†o mua ƒë·ªì trong {SlashCommand.SHOP_GLOBAL.value} tr∆∞·ªõc!", inline=False)
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        #Kh√¥ng cho th·ª±c hi·ªán n·∫øu c√≤n last_gift
        elif user_profile != None and user_profile.last_gift != None:
            time_window = timedelta(hours=1)
            check = self.check_if_within_time_delta(input=user_profile.last_gift, time_window=time_window)
            if check:
                next_time = user_profile.last_work + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ t·∫∑ng qu√† r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh {SlashCommand.GIFT.value} v√†o l√∫c <t:{unix_time}:t> !", color=0xc379e0)
                view = SelfDestructView(timeout=60)
                mess = await interaction.followup.send(embed=embed, view=view)
                view.message = mess
                return
        
        target_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=user.id)
        if target_profile == None:
            embed = discord.Embed(title=f"", description=f"{user.mention} Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!", color=0xddede7)
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(embed=embed, view=view)
            view.message = mess
            return
        
        embed = discord.Embed(title=f"", description=f"T·∫∑ng cho {user.mention}", color=0xddede7)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} H√£y ch·ªçn nh·ªØng v·∫≠t ph·∫©m m√† b·∫°n ƒëang s·ªü h·ªØu d∆∞·ªõi ƒë√¢y!", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        view = GiftView(user_profile=user_profile, target_profile=target_profile, user=interaction.user, target_user=user)
        mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
        view.message = mess
        return
    
    
    def check_if_within_time_delta(self, input: datetime, time_window: timedelta):
        now = datetime.now()
        if now - time_window <= input <= now + time_window:
            return True
        else:
            return False
    