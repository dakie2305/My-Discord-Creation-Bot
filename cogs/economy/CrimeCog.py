from CustomEnum.SlashEnum import SlashCommand
from CustomEnum.EmojiEnum import EmojiCreation2
from CustomEnum.RoleEnum import TrueHeavenRoleId
import discord
from discord.ext import commands
import Handling.Economy.Profile.ProfileMongoManager as ProfileMongoManager
from datetime import datetime, timedelta
import random
from Handling.Misc.SelfDestructView import SelfDestructView
import CustomEnum.UserEnum as UserEnum
import CustomFunctions
from discord.app_commands import Choice
import Handling.Economy.Quest.QuestMongoManager as QuestMongoManager
from Handling.Economy.Profile.ProfileClass import Profile

async def setup(bot: commands.Bot):
    await bot.add_cog(CrimeEconomy(bot=bot))
    print("Crime Economy is ready!")

class CrimeEconomy(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
    
    @commands.command()
    async def crime(self, ctx):
        message: discord.Message = ctx.message
        if message:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng h·ªó tr·ª£ prefix command. Vui l√≤ng d√πng l·ªánh /crime !",color=discord.Color.blue())
            mes = await message.reply(embed=embed, view=view)
            if view != None:
                view.message = mes
            return
    
    #region crime
    @discord.app_commands.choices(action=[
        Choice(name="ƒê√°nh nhau, g√¢y g·ªó ng∆∞·ªùi kh√°c", value="fight"),
        Choice(name="C∆∞·ªõp b√≥c ng∆∞·ªùi kh√°c", value="rob"),
        Choice(name="X√∫c ph·∫°m nh√¢n ph·∫©m ng∆∞·ªùi kh√°c", value="insult"),
        Choice(name="R·ª≠a ti·ªÅn, tr·ªën thu·∫ø", value="laundry"),
        Choice(name="Bu√¥n l·∫≠u, tu·ªìn h√†ng c·∫•m", value="smuggler"),
    ])
    @discord.app_commands.describe(action="Ch·ªçn lo·∫°i h√†nh vi ph·∫°m t·ªôi.")
    @discord.app_commands.command(name="crime", description="L·ªánh th·ª±c hi·ªán c√°c h√†nh vi ph·∫°m t·ªôi!")
    async def crime_slash_command(self, interaction: discord.Interaction, action: str, target_user: discord.Member):
        await interaction.response.defer(ephemeral=False)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        if interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang l√†m l·ªánh n√†y! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.red())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        if target_user.bot:
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"Kh√¥ng ƒë∆∞·ª£c ch·ªçn Bot!", color=0xe82517)
            await interaction.followup.send(embed=embed, view=view)
            return
        
        #N·∫øu c∆∞·ªõp, ƒë√°nh, ch·ª≠i th√¨ interaction user kh√°c target
        if action == "rob" or action == "fight" or action == "insult":
            if interaction.user.id == target_user.id:
                view = SelfDestructView(30)
                embed = discord.Embed(title=f"", description=f"B·∫°n kh√¥ng th·ªÉ ch·ªçn b·∫£n th√¢n!", color=0xe82517)
                await interaction.followup.send(embed=embed, view=view)
                return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            user_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=interaction.user.id, user_name=interaction.user.name, user_display_name=interaction.user.display_name)
        
        target_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if target_profile == None:
            target_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=target_user.id, user_name=target_user.name, user_display_name=target_user.display_name)
        
        
        #N·∫øu qu√° ngh√®o th√¨ b·ªè
        if action == "rob" and target_profile.copper < 10000 and target_profile.silver <= 0 and target_profile.gold <= 0 and target_profile.darkium <= 0:
            view = SelfDestructView(60)
            embed = discord.Embed(title=f"", description=f"{target_user.mention} qu√° ngh√®o, b·∫°n kh√¥ng th·ªÉ c∆∞·ªõp c·ªßa ng∆∞·ªùi qu√° ngh√®o!", color=0xe82517)
            await interaction.followup.send(embed=embed, view=view)
            return
        #N·∫øu h∆°n ng∆∞·ªùi ta 10 level th√¨ kh√¥ng cho c∆∞·ªõp n·ªØa
        elif action == "rob" and (user_profile.level -10 > target_profile.level):
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"{target_user.mention} c·∫•p qu√° th·∫•p, b·∫°n kh√¥ng th·ªÉ c∆∞·ªõp c·ªßa ng∆∞·ªùi th·∫•p h∆°n m√¨nh 10 c·∫•p!", color=0xe82517)
            await interaction.followup.send(embed=embed, view=view)
            return
        
        #N·∫øu bu√¥n l·∫≠u th√¨ c·∫ßn √≠t nh·∫•t 2000 Copper trong profile
        elif action == "smuggler" and user_profile.copper < 2000:
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"{interaction.user.mention} c·∫ßn √≠t nh·∫•t 2000 {EmojiCreation2.COPPER.value} ƒë·ªÉ th·ª±c hi·ªán bu√¥n l·∫≠u!", color=0xe82517)
            await interaction.followup.send(embed=embed, view=view)
            return

        await interaction.followup.send("L·ªánh ƒëang ho√†n thi·ªán sau!")
        return
        view = SelfDestructView(60)
        embed, view = await self.embed_crime_command(user=interaction.user)
        mess = await interaction.followup.send(embed=embed)
        
        return
        
    async def embed_crime_command(self, user: discord.Member, target_user: discord.Member, action: str):
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=user.guild.id, user_id=user.id)
        
        if user_profile != None and user_profile.last_crime != None:
            time_window = timedelta(hours=1, minutes=30)
            check = self.check_if_within_time_delta(input=user_profile.last_crime, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông v√†o 1h30 xem ch·ª´ng n√†o m·ªõi l√†m vi·ªác ƒë∆∞·ª£c ti·∫øp
                crime_next_time = user_profile.last_crime + time_window
                unix_time = int(crime_next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ l√†m vi·ªác r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh {SlashCommand.WORK.value} v√†o l√∫c <t:{unix_time}:t> !", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                return embed, view
        
        #Kh√¥ng cho th·ª±c hi·ªán n·∫øu c√≤n jail_time
        if user_profile != None and user_profile.jail_time != None:
            if user_profile.jail_time > datetime.now():
                unix_time = int(user_profile.jail_time.timestamp())
                embed = discord.Embed(title=f"", description=f"‚õìÔ∏è B·∫°n ƒë√£ b·ªã ch√≠nh quy·ªÅn b·∫Øt gi·ªØ r·ªìi, vui l√≤ng ƒë·ª£i ƒë·∫øn <t:{unix_time}:t> !", color=0xc379e0)
                return embed, None
            else:
                ProfileMongoManager.update_jail_time(guild_id=user.guild.id, user_id=user.id, jail_time=None)
        
        authority_user = ProfileMongoManager.is_authority(guild_id=user.guild.id, user_id= user.id)
        dignity_point = 50
        tax = 80
        pay_tax = True
        bonus = False
        
        
        
        
    def check_if_within_time_delta(self, input: datetime, time_window: timedelta):
        now = datetime.now()
        if now - time_window <= input <= now + time_window:
            return True
        else:
            return False
    
        