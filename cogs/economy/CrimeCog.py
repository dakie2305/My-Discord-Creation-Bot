from CustomEnum.SlashEnum import SlashCommand
from CustomEnum.EmojiEnum import EmojiCreation2
from CustomEnum.RoleEnum import TrueHeavenRoleId
import discord
from discord.ext import commands
import Handling.Economy.Profile.ProfileMongoManager as ProfileMongoManager
from datetime import datetime, timedelta
import random
from Handling.Misc.SelfDestructView import SelfDestructView
import CustomEnum.UserEnum as UserEnum
import CustomFunctions
from discord.app_commands import Choice
import asyncio
import Handling.Economy.Quest.QuestMongoManager as QuestMongoManager
from Handling.Economy.Profile.ProfileClass import Profile
from Handling.Economy.Crime.AuthorityInterceptView import AuthorityInterceptView

async def setup(bot: commands.Bot):
    await bot.add_cog(CrimeEconomy(bot=bot))
    print("Crime Economy is ready!")

class CrimeEconomy(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
    
    @commands.command()
    async def crime(self, ctx):
        message: discord.Message = ctx.message
        if message:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Kh√¥ng h·ªó tr·ª£ prefix command. Vui l√≤ng d√πng l·ªánh /crime !",color=discord.Color.blue())
            mes = await message.reply(embed=embed, view=view)
            if view != None:
                view.message = mes
            return
    
    #region crime
    @discord.app_commands.choices(action=[
        Choice(name="ƒê√°nh nhau, g√¢y g·ªó ng∆∞·ªùi kh√°c", value="fight"),
        Choice(name="C∆∞·ªõp b√≥c ng∆∞·ªùi kh√°c", value="rob"),
        Choice(name="X√∫c ph·∫°m nh√¢n ph·∫©m ng∆∞·ªùi kh√°c", value="insult"),
        Choice(name="R·ª≠a ti·ªÅn, tr·ªën thu·∫ø", value="laundry"),
        Choice(name="Bu√¥n l·∫≠u, tu·ªìn h√†ng c·∫•m", value="smuggler"),
    ])
    @discord.app_commands.describe(action="Ch·ªçn lo·∫°i h√†nh vi ph·∫°m t·ªôi.")
    @discord.app_commands.command(name="crime", description="L·ªánh th·ª±c hi·ªán c√°c h√†nh vi ph·∫°m t·ªôi!")
    async def crime_slash_command(self, interaction: discord.Interaction, action: str, target_user: discord.Member):
        await interaction.response.defer(ephemeral=True)
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        if interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang l√†m l·ªánh n√†y! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.red())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        if target_user.bot:
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"Kh√¥ng ƒë∆∞·ª£c ch·ªçn Bot!", color=0xe82517)
            await interaction.followup.send(embed=embed, view=view)
            return
        
        #N·∫øu c∆∞·ªõp, ƒë√°nh, ch·ª≠i th√¨ interaction user kh√°c target
        if action == "rob" or action == "fight" or action == "insult":
            if interaction.user.id == target_user.id:
                view = SelfDestructView(30)
                embed = discord.Embed(title=f"", description=f"B·∫°n kh√¥ng th·ªÉ ch·ªçn b·∫£n th√¢n!", color=0xe82517)
                m = await interaction.followup.send(embed=embed, view=view)
                view.message = m
                return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            user_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=interaction.user.id, user_name=interaction.user.name, user_display_name=interaction.user.display_name)
        
        target_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if target_profile == None:
            target_profile = ProfileMongoManager.create_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=target_user.id, user_name=target_user.name, user_display_name=target_user.display_name)
        
        
        #N·∫øu qu√° ngh√®o th√¨ b·ªè
        if action == "rob" and target_profile.copper < 10000 and target_profile.silver <= 0 and target_profile.gold <= 0 and target_profile.darkium <= 0:
            view = SelfDestructView(60)
            embed = discord.Embed(title=f"", description=f"{target_user.mention} qu√° ngh√®o, b·∫°n kh√¥ng th·ªÉ c∆∞·ªõp c·ªßa ng∆∞·ªùi qu√° ngh√®o!", color=0xe82517)
            m = await interaction.followup.send(embed=embed, view=view)
            view.message = m
            return
        #N·∫øu h∆°n ng∆∞·ªùi ta 10 level th√¨ kh√¥ng cho c∆∞·ªõp n·ªØa
        elif action == "rob" and (user_profile.level -10 > target_profile.level):
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"{target_user.mention} c·∫•p qu√° th·∫•p, b·∫°n kh√¥ng th·ªÉ c∆∞·ªõp c·ªßa ng∆∞·ªùi th·∫•p h∆°n m√¨nh 10 c·∫•p!", color=0xe82517)
            m = await interaction.followup.send(embed=embed, view=view)
            view.message = m
            return
        #ƒê√°nh nhau m√† kh√¥ng c√≤n ƒëi·ªÉm nh√¢n ph·∫©m th√¨ kh√¥ng cho ƒë√°nh nhau
        elif action == "fight" and user_profile.dignity_point <= 10:
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"ƒêi·ªÉm nh√¢n ph·∫©m b·∫°n qu√° th·∫•p, h√£y tƒÉng nh√¢n ph·∫©m b·∫±ng c√°ch d√πng l·ªánh {SlashCommand.WORK.value} ho·∫∑c {SlashCommand.DAILY.value} tr∆∞·ªõc ƒëi!", color=0xe82517)
            m = await interaction.followup.send(embed=embed, view=view)
            view.message = m
            return
        
        #N·∫øu bu√¥n l·∫≠u th√¨ c·∫ßn √≠t nh·∫•t 2000 Copper trong profile
        elif action == "smuggler" and user_profile.copper < 2000:
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"{interaction.user.mention} c·∫ßn √≠t nh·∫•t 2000 {EmojiCreation2.COPPER.value} ƒë·ªÉ th·ª±c hi·ªán bu√¥n l·∫≠u!", color=0xe82517)
            m = await interaction.followup.send(embed=embed, view=view)
            view.message = m
            return
        
        elif user_profile != None and user_profile.last_crime != None:
            time_window = timedelta(hours=1)
            check = self.check_if_within_time_delta(input=user_profile.last_crime, time_window=time_window)
            if check:
                #L·∫•y th·ªùi gian c≈© ƒë·ªÉ c·ªông v√†o 1h xem ch·ª´ng n√†o m·ªõi crime ƒë∆∞·ª£c ti·∫øp
                crime_next_time = user_profile.last_crime + time_window
                unix_time = int(crime_next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ l√†m vi·ªác x·∫•u r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh {SlashCommand.CRIME.value} v√†o l√∫c <t:{unix_time}:t> !", color=0xc379e0)
                view = SelfDestructView(timeout=30)
                m = await interaction.followup.send(embed=embed, view=view)
                view.message = m
                return

        if action == "fight":
            await self.process_fight_command(interaction=interaction, user=interaction.user, target_user=target_user, user_profile=user_profile, target_profile=target_profile)
        else:
            view = SelfDestructView(30)
            embed = discord.Embed(title=f"", description=f"Ch·ª©c nƒÉng n√†y v·∫´n ch∆∞a ho√†n thi·ªán, Darkie v·∫´n ƒëang code!", color=0xe82517)
            m = await interaction.followup.send(embed=embed, view=view)
            view.message = m
            return
        
        
    async def process_fight_command(self, interaction: discord.Interaction, user: discord.Member, target_user: discord.Member, user_profile: Profile, target_profile: Profile):
        authority_user = ProfileMongoManager.get_authority(guild_id=user.guild.id)
        win_lines = [
                    "{user_name} ƒë√£ ch·ªçc v√†o m√≥c {target_name} v√† ƒë√£ th·∫Øng!",
                     "{user_name} ƒë√£ m√≥c s√∫ng ra, v√† {target_name} ƒë√£ ch·∫•p nh·∫≠n ho√† gi·∫£i!",
                     "{user_name} ƒë√£ nhanh ch√≥ng kh·ªëng ch·∫ø ƒë∆∞·ª£c {target_name}!",
                     "{user_name} ƒë√£ ra ƒë√≤n ch√≠ m·∫°ng, h·∫° con m·∫π n√≥ g·ª•c {target_name}!",
                     "{user_name} ƒë√£ ƒë√°nh b·∫°i {target_name} b·∫±ng k·ªπ nƒÉng th∆∞·ª£ng th·ª´a!",
                     "{user_name} ƒë√£ kho√° m·ªìm {target_name} th√†nh c√¥ng!",
                     "{user_name} ƒë√£ √°p ƒë·∫£o {target_name} ƒë·∫øn m·ª©c Mike Tyson ph·∫£i g·ªçi b·∫±ng m·ªìm!",
                     "{target_name} kh√¥ng h·ªÅ ƒë·ªß tu·ªïi so v·ªõi {user_name}!",
                     "{target_name} tu·ªïi con t√¥m v·ªõi {user_name}!",
                     "{target_name} c·ªë g·∫Øng ch·ªëng tr·∫£, nh∆∞ng {user_name} ƒë√£ ra tay ch·∫•m d·ª©t tr·∫≠n ƒë·∫•u!",
                     ]
        lose_lines = [
            "{user_name} kh√¥ng h·ªÅ ƒë·ªß tu·ªïi so v·ªõi {target_name}!",
            "{user_name} tu·ªïi con t√¥m v·ªõi {target_name}!",
            "{target_name} ƒë√£ g·ªçi anh em h·ªôi ƒë·ªông ng∆∞·ª£c l·∫°i {user_name}!",
            "{user_name} t∆∞·ªüng m√¨nh ngon, nh∆∞ng tu·ªïi l v·ªõi {target_name}!",
            "{user_name} ƒë√£ ƒëi sai n∆∞·ªõc, v√† b·ªã {target_name} ƒë√°nh l·∫°i cho b·∫ßm d·∫≠p!",
            "{user_name} ƒë√£ ch·ªçn sai ƒë·ªëi th·ªß, v√† b·ªã {target_name} ƒë√°nh cho l√™n b·ªù xu·ªëng ru·ªông!",
            "{user_name} ƒë√£ b·ªã {target_name} v·∫£ cho l·ªách m·ªìm!",
            "{user_name} ƒë·ªãnh lao ƒë·∫øn th√¨ {target_name} ƒë√£ m√≥c s√∫ng ra n√™n {user_name} ch·ªâ c√≥ th·ªÉ xin gi·∫£ng ho√†!",
            ]
        
        fighting_gif_link = [
            "https://i.pinimg.com/originals/bf/d4/7c/bfd47c06b2f98db0877b56d990e73662.gif",
            "https://i.pinimg.com/originals/bc/e4/b9/bce4b931cb3e21bedf6e9384fa19b6a3.gif",
            "https://i.pinimg.com/originals/41/bc/1a/41bc1ad4b1477371329a30b9e06466dd.gif",
            "https://i.pinimg.com/originals/36/c8/99/36c899aab751ae2e8d397592b1ea89a1.gif",
            "https://i.pinimg.com/originals/09/6a/2b/096a2b76d0b8c00c40a69547933ab7c8.gif",
        ]
        
        #Fight s·∫Ω d·ª±a v√†o level ƒë·ªÉ x√°c ƒë·ªãnh t·ªâ l·ªá th·∫Øng c·ªßa user v√† target_user
        user_win_fight = False
        if user_profile.level < target_profile.level:
            user_win_fight = self.get_chance(25)
        else:
            user_win_fight = self.get_chance(75)
        
        preloading_text = f"{user.mention} ƒë√£ lao ƒë·∫øn ƒë√°nh l·ªôn v·ªõi {target_user.mention}!\nC√≥ th·ªÉ g·ªçi Ch√≠nh Quy·ªÅn v√†o cu·ªôc ƒë·ªÉ ngƒÉn ch·∫∑n ·∫©u ƒë·∫£ n√†y!"
        embed = discord.Embed(title=f"", description=f"{preloading_text}", color=0xc379e0)
        embed.set_image(url=random.choice(fighting_gif_link))
        view = AuthorityInterceptView(user=user, user_profile=user_profile, crime_type="fight", target_profile=target_profile, target_user=target_user, authority_user=authority_user)
        await interaction.followup.send(f"B·∫°n ƒë√£ g√¢y g·ªó!", ephemeral=True)
        channel = interaction.channel
        m = await channel.send(embed=embed, view=view, content=f"{target_user.mention}")
        view.old_message = m
        #ƒê·ª£i 30s ƒë·ªÉ x√°c ƒë·ªãnh ng∆∞·ªùi th·∫Øng
        await asyncio.sleep(30)
        result_text =f""
        if user_win_fight:
            result_text = random.choice(win_lines)
            result_text = result_text.replace("{user_name}", user.mention)
            result_text = result_text.replace("{target_name}", target_user.mention)
            dignity_point = 10
            result_text += f"\n{user.mention} ƒë√£ ƒë√°nh th·∫Øng {target_user.mention} n√™n c·∫£ hai ƒë·ªÅu m·∫•t **{dignity_point} nh√¢n ph·∫©m** nh∆∞ nhau!"
            #Tr·ª´ nh√¢n ph·∫©m c·∫£ hai
            ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=user.id, user_name=user.name, user_display_name=user.display_name, dignity_point= -dignity_point)
            ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=target_user.id, user_name=target_user.name, user_display_name=target_user.display_name, dignity_point= -dignity_point)
            #C·ªông kinh nghi·ªám cho ng∆∞·ªùi th·∫Øng
            ProfileMongoManager.update_level_progressing(guild_id=interaction.guild_id, user_id=user.id)
            
        else:
            result_text = random.choice(lose_lines)
            result_text = result_text.replace("{user_name}", user.mention)
            result_text = result_text.replace("{target_name}", target_user.mention)
            dignity_point = 15
            result_text += f"\n{user.mention} ƒë√£ ƒë√°nh thua {target_user.mention}, n√™n {user.display_name} ƒë√£ b·ªã tr·ª´  **{dignity_point} nh√¢n ph·∫©m**!"
            #Tr·ª´ nh√¢n ph·∫©m ng∆∞·ªùi ƒë√°nh
            ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=user.id, user_name=user.name, user_display_name=user.display_name, dignity_point= -dignity_point)
        #Update last_crime
        ProfileMongoManager.update_last_crime_now(guild_id=interaction.guild_id, user_id=user.id)
        
        new_embed = discord.Embed(title=f"", description=f"{result_text}", color=0xc379e0)
        await channel.send(embed=new_embed)
        await m.delete()
    
    def get_chance(self, chance: int):
        rand_num = random.randint(0, 100)
        if rand_num < chance:
            return True
        else:
            return False

        
        
        
    def check_if_within_time_delta(self, input: datetime, time_window: timedelta):
        now = datetime.now()
        if now - time_window <= input <= now + time_window:
            return True
        else:
            return False
    
        