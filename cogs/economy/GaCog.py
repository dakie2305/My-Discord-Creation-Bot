from CustomEnum.SlashEnum import SlashCommand
from CustomEnum.EmojiEnum import EmojiCreation2
import discord
from discord.ext import commands
import Handling.Economy.Profile.ProfileMongoManager as ProfileMongoManager
from datetime import datetime, timedelta
import CustomFunctions
from Handling.Misc.SelfDestructView import SelfDestructView
import CustomEnum.UserEnum as UserEnum
from typing import List, Optional, Dict
import Handling.Economy.GA.ListGAAndSkills as ListGAAndSkills
from Handling.Economy.GA.GuardianAngelClass import GuardianAngel, GuardianAngelSkill
from Handling.Economy.GA.GuardianAngelAttackClass import GuardianAngelAttackClass
from Handling.Economy.GA.ConfirmSellGuardianView import ConfirmSellGuardianView
from Handling.Economy.GA.GaSellOptionsMenuView import GaSellOptionsMenuView
from Handling.Economy.GA.RankUpView import RankUpView
from Handling.Economy.GA.GaBattleView import GaBattleView
import random
from Handling.Misc.UtilitiesFunctionsEconomy import UtilitiesFunctions
from discord.app_commands import Choice
from CustomEnum.TrueHeavenEnum import TrueHeavenEnum

async def setup(bot: commands.Bot):
    await bot.add_cog(GuardianAngelCog(bot=bot))
    print("Guardian Angel is ready!")

class GuardianAngelCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
    
    ga_group = discord.app_commands.Group(name="ga", description="C√°c l·ªánh li√™n quan ƒë·∫øn Guardian Angel!")
    #region ga sell slash
    @ga_group.command(name="sell", description="B√°n H·ªô V·ªá Th·∫ßn hi·ªán t·∫°i!")
    @discord.app_commands.checks.cooldown(1, 30)
    async def ga_sell_slash_command(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        elif user_profile.guardian == None:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng mua H·ªô V·ªá Th·∫ßn tr∆∞·ªõc b·∫±ng l·ªánh {SlashCommand.SHOP_GUARDIAN.value} ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        
        #N·∫øu c√≥ list skill trong guardian th√¨ h·ªèi user ch·ªçn b√°n skill hay guardian
        if user_profile.guardian.list_skills != None and len(user_profile.guardian.list_skills) > 0 and user_profile.guardian.is_dead == False:
            embed = discord.Embed(title=f"", description=f"Menu B√°n H·ªô V·ªá Th·∫ßn", color=0x0ce7f2)
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            embed.add_field(name=f"", value=f"Ch·ªçn th·ª© b·∫°n mu·ªën b√°n", inline=False)
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            view = GaSellOptionsMenuView(user=interaction.user, user_profile=user_profile)
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=False)
            view.message = mess
        else:
            #T√≠nh to√°n s·ªë ti·ªÅn b√°n h·ªô v·ªá th·∫ßn
            money = int(user_profile.guardian.worth_amount * 30 / 100)
            if user_profile.guardian.level > 30 and user_profile.guardian.is_dead == False:
                money += int(user_profile.guardian.worth_amount*user_profile.guardian.level/100)
            if money > 500 and user_profile.guardian.worth_type == "D": money = 500
            embed = discord.Embed(title=f"", description=f"B√°n H·ªô V·ªá Th·∫ßn", color=0x0ce7f2)
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            embed.add_field(name=f"", value=f"B·∫°n c√≥ s·∫µn s√†ng b√°n H·ªô V·ªá Th·∫ßn [{user_profile.guardian.ga_emoji} - **{user_profile.guardian.ga_name}**] v·ªõi gi√° **{money}** {UtilitiesFunctions.get_emoji_from_loai_tien(user_profile.guardian.worth_type)} kh√¥ng?", inline=False)
            embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
            embed.set_footer(text=f"H√£y n√¢ng c·∫•p c·ªßa H·ªô V·ªá Th·∫ßn l√™n th·∫≠t cao th√¨ b√°n m·ªõi ƒë∆∞·ª£c gi√° nh√©!", icon_url=f"{EmojiCreation2.TRUE_HEAVEN_LINK_MINI.value}")
            view = ConfirmSellGuardianView(money=money, money_type=user_profile.guardian.worth_type, guardian=user_profile.guardian, user=interaction.user)
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=False)
            view.message = mess
        return
        
    @ga_sell_slash_command.error
    async def ga_sell_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)
    
    #region ga meditate slash
    @ga_group.command(name="meditate", description="Cho H·ªô V·ªá Th·∫ßn tu thi·ªÅn ƒë·ªÉ h·ªìi ph·ª•c th·ªÉ l·ª±c v√† tƒÉng kinh nghi·ªám!")
    @discord.app_commands.checks.cooldown(1, 15)
    async def ga_meditate_slash_command(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        elif user_profile.guardian == None or user_profile.guardian.is_dead:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng mua H·ªô V·ªá Th·∫ßn tr∆∞·ªõc b·∫±ng l·ªánh {SlashCommand.SHOP_GUARDIAN.value} ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        
        if user_profile.guardian.last_meditation != None:
            time_window = timedelta(hours=1)
            check = UtilitiesFunctions.check_if_within_time_delta(input=user_profile.guardian.last_meditation, time_window=time_window)
            if check:
                next_time = user_profile.guardian.last_meditation + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ cho H·ªô V·ªá Th·∫ßn tu thi·ªÅn r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh v√†o l√∫c <t:{unix_time}:t>!", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view, ephemeral=False)
                view.message = mess
                return
            
        if user_profile.guardian.time_to_recover != None:
            if user_profile.guardian.time_to_recover > datetime.now():
                view = SelfDestructView(timeout=30)
                next_time = user_profile.guardian.time_to_recover
                unix_time = int(next_time.timestamp())
                mess = await interaction.followup.send(content=f"H·ªô V·ªá Th·∫ßn c·ªßa b·∫°n ƒëang b·ªã th∆∞∆°ng! Vui l√≤ng ch·ªù h·ªìi ph·ª•c v√†o l√∫c <t:{unix_time}:t> ho·∫∑c mua b√¨nh h·ªìi ph·ª•c trong {SlashCommand.SHOP_GLOBAL.value}!", ephemeral=True, view=view)
                view.message = mess
                return
            else:
                #H·ªìi ph·ª•c 50% m√°u, 50% th·ªÉ l·ª±c
                health = int(user_profile.guardian.max_health*50/100)
                stamina = int(user_profile.guardian.max_stamina*50/100)
                ProfileMongoManager.update_guardian_stats(guild_id=interaction.guild_id,user_id=interaction.user.id, health=health, stamina=stamina)
        
        special_case = False
        if interaction.guild_id == 1256987900277690470:
            for role in interaction.user.roles:
                if role.id == TrueHeavenEnum.TOP_1_GUARDIAN.value: 
                    special_case = True
                    break
        
        #restore t√≠nh 40% c·ªßa mana
        mana = int(user_profile.guardian.max_mana*40/100)
        if special_case:
            mana = user_profile.guardian.max_mana
        
        random_bonus_exp = random.randint(15, 60)
        dignity_point = 10
        embed = discord.Embed(title=f"", description=f"Tu Thi·ªÅn", color=0x0ce7f2)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"H·ªô V·ªá Th·∫ßn [{user_profile.guardian.ga_emoji} - **{user_profile.guardian.ga_name}**] ƒë√£ ti·∫øn nh·∫≠p thi·ªÅn ƒë·ªãnh.", inline=False)
        if special_case:
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} H·ªìi ph·ª•c **to√†n b·ªô** Mana {EmojiCreation2.MP.value}!", inline=False)
        else:
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} H·ªìi ph·ª•c **{mana}** Mana {EmojiCreation2.MP.value}!", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} C·ªông **{random_bonus_exp}** ƒëi·ªÉm EXP cho H·ªô V·ªá Th·∫ßn!", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} C·ªông **{dignity_point}** nh√¢n ph·∫©m!", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        
        ProfileMongoManager.update_level_progressing(guild_id=interaction.guild_id,user_id=interaction.user.id)
        ProfileMongoManager.update_main_guardian_level_progressing(guild_id=interaction.guild_id,user_id=interaction.user.id, bonus_exp=random_bonus_exp)
        ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id,user_id=interaction.user.id, guild_name="", user_display_name="", user_name="", dignity_point=dignity_point)
        ProfileMongoManager.update_guardian_stats(guild_id=interaction.guild_id,user_id=interaction.user.id, mana=mana)
        ProfileMongoManager.update_main_guardian_profile_time(guild_id=interaction.guild_id,user_id=interaction.user.id, data_type="last_meditation", date_value=datetime.now())
        
        
        await interaction.followup.send(embed=embed)
    
    @ga_meditate_slash_command.error
    async def ga_meditate_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)
    
    #region ga feed slash
    @ga_group.command(name="feed", description="Cho H·ªô V·ªá Th·∫ßn ƒÉn ƒë·ªÉ h·ªìi ph·ª•c!")
    @discord.app_commands.checks.cooldown(1, 15)
    async def ga_feed_slash_command(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        elif user_profile.guardian == None or user_profile.guardian.is_dead:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng mua H·ªô V·ªá Th·∫ßn tr∆∞·ªõc b·∫±ng l·ªánh {SlashCommand.SHOP_GUARDIAN.value} ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        elif user_profile.list_items == None or len(user_profile.list_items) ==0:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng tr·ªìng tr√°i c√¢y b·∫±ng l·ªánh {SlashCommand.WORK_PLANTING.value} ƒë·ªÉ ki·∫øm th·ª©c ƒÉn!", ephemeral=True, view=view)
            view.message = mess
            return
        
        allowed_item_id = ["wheat","potato", "corn", "watermelon", "weed", "g_pocky","g_chocolate", "g_stcake"]
        chosen_item = None
        for item in user_profile.list_items:
            if item.item_id in allowed_item_id:
                chosen_item = item
                break
        if chosen_item == None:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng tr·ªìng tr√°i c√¢y b·∫±ng l·ªánh {SlashCommand.WORK_PLANTING.value} ho·∫∑c mua th·ª©c ƒÉn!", ephemeral=True, view=view)
            view.message = mess
            return
        
        if user_profile.guardian.last_feed != None:
            time_window = timedelta(hours=1)
            check = UtilitiesFunctions.check_if_within_time_delta(input=user_profile.guardian.last_feed, time_window=time_window)
            if check:
                next_time = user_profile.guardian.last_feed + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ cho H·ªô V·ªá Th·∫ßn ƒÉn r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh v√†o l√∫c <t:{unix_time}:t>!", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view, ephemeral=False)
                view.message = mess
                return
        
        if user_profile.guardian.time_to_recover != None:
            if user_profile.guardian.time_to_recover > datetime.now():
                view = SelfDestructView(timeout=30)
                next_time = user_profile.guardian.time_to_recover
                unix_time = int(next_time.timestamp())
                mess = await interaction.followup.send(content=f"H·ªô V·ªá Th·∫ßn c·ªßa b·∫°n ƒëang b·ªã th∆∞∆°ng! Vui l√≤ng ch·ªù h·ªìi ph·ª•c v√†o l√∫c <t:{unix_time}:t> ho·∫∑c mua b√¨nh h·ªìi ph·ª•c trong {SlashCommand.SHOP_GLOBAL.value}!", ephemeral=True, view=view)
                view.message = mess
                return
            else:
                #H·ªìi ph·ª•c 50% m√°u, 50% th·ªÉ l·ª±c
                health = int(user_profile.guardian.max_health*50/100)
                stamina = int(user_profile.guardian.max_stamina*50/100)
                ProfileMongoManager.update_guardian_stats(guild_id=interaction.guild_id,user_id=interaction.user.id, health=health, stamina=stamina)
        

        special_case = False
        if interaction.guild_id == 1256987900277690470:
            for role in interaction.user.roles:
                if role.id == TrueHeavenEnum.TOP_1_GUARDIAN.value: 
                    special_case = True
                    break
        
        #heal t√≠nh 40% c·ªßa max_health, 40% c·ªßa max th·ªÉ l·ª±c
        health = int(user_profile.guardian.max_health*40/100)
        stamina = int(user_profile.guardian.max_stamina*40/100)

        if special_case:
            health = user_profile.guardian.max_health
            stamina = user_profile.guardian.max_stamina

        random_bonus_exp = chosen_item.bonus_exp
        dignity_point = 5
        if chosen_item.item_id == "weed":
            dignity_point = 0
        embed = discord.Embed(title=f"", description=f"Cho ƒÉn", color=0x0ce7f2)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"H·ªô V·ªá Th·∫ßn {user_profile.guardian.ga_emoji} - **{user_profile.guardian.ga_name}** ƒë√£ ƒÉn [{chosen_item.emoji} - **{chosen_item.item_name}**]", inline=False)
        if special_case:
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} H·ªìi ph·ª•c **to√†n b·ªô** {EmojiCreation2.HP.value} m√°u v√† {EmojiCreation2.STAMINA.value} th·ªÉ l·ª±c!", inline=False)
        else:
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} H·ªìi ph·ª•c **{health}** {EmojiCreation2.HP.value} m√°u!", inline=False)
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} H·ªìi ph·ª•c **{stamina}** {EmojiCreation2.STAMINA.value} th·ªÉ l·ª±c!", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} C·ªông **{random_bonus_exp}** ƒëi·ªÉm EXP cho H·ªô V·ªá Th·∫ßn!", inline=False)
        if dignity_point != 0:
            embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} C·ªông **{dignity_point}** nh√¢n ph·∫©m!", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        
        ProfileMongoManager.update_level_progressing(guild_id=interaction.guild_id,user_id=interaction.user.id)
        ProfileMongoManager.update_main_guardian_level_progressing(guild_id=interaction.guild_id,user_id=interaction.user.id, bonus_exp=random_bonus_exp)
        ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id,user_id=interaction.user.id, guild_name="", user_display_name="", user_name="", dignity_point=dignity_point)
        ProfileMongoManager.update_main_guardian_profile_time(guild_id=interaction.guild_id,user_id=interaction.user.id, data_type="last_feed", date_value=datetime.now())
        ProfileMongoManager.update_guardian_stats(guild_id=interaction.guild_id,user_id=interaction.user.id, health=health, stamina=stamina)
        ProfileMongoManager.update_list_items_profile(guild_id=interaction.guild_id,user_id=interaction.user.id, user_display_name="", user_name="", guild_name="", item=chosen_item, amount=-1)
        await interaction.followup.send(embed=embed)
        
    @ga_feed_slash_command.error
    async def ga_feed_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)
        
    #region ga rankup slash
    @ga_group.command(name="rankup", description="N√¢ng c·∫•p ch·ªâ s·ªë cho H·ªô V·ªá Th·∫ßn!")
    @discord.app_commands.checks.cooldown(1, 15)
    async def ga_rankup_slash_command(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        elif user_profile.guardian == None or user_profile.guardian.is_dead:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng mua H·ªô V·ªá Th·∫ßn tr∆∞·ªõc b·∫±ng l·ªánh {SlashCommand.SHOP_GUARDIAN.value} ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        elif user_profile.guardian.stats_point == 0:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"H·ªô V·ªá Th·∫ßn c·ªßa b·∫°n kh√¥ng c√≥ ƒëi·ªÉm c·ªông n√†o h·∫øt! H√£y d√πng c√°c l·ªánh nh∆∞ {SlashCommand.GA_FEED.value}, {SlashCommand.GA_MEDITATE.value} ƒë·ªÉ n√¢ng c·∫•p cho H·ªô V·ªá Th·∫ßn", ephemeral=True, view=view)
            view.message = mess
            return
        
        embed = discord.Embed(title=f"", description=f"N√¢ng ƒëi·ªÉm ch·ªâ s·ªë H·ªô V·ªá Th·∫ßn", color=0x0ce7f2)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"Ch·ªçn ch·ªâ s·ªë ƒë·ªÉ n√¢ng c·∫•p H·ªô V·ªá Th·∫ßn {user_profile.guardian.ga_emoji} - **{user_profile.guardian.ga_name}**", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} **1** ƒëi·ªÉm c·ªông c√≥ th·ªÉ n√¢ng **5** ƒëi·ªÉm t·∫•n c√¥ng", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} **1** ƒëi·ªÉm c·ªông c√≥ th·ªÉ n√¢ng **10** ƒëi·ªÉm ch·ªâ s·ªë M√°u, Th·ªÉ L·ª±c, Mana", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        embed.add_field(name=f"", value=f"> S·ªë ƒëi·ªÉm c·ªông hi·ªán t·∫°i: **{user_profile.guardian.stats_point}**", inline=False)
        view = RankUpView(user_profile=user_profile, user=interaction.user)
        mess = await interaction.followup.send(embed=embed, view=view)
        view.message = mess
        return
    
    @ga_rankup_slash_command.error
    async def ga_rankup_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)
    
    #region ga battle slash
    @ga_group.command(name="battle", description="Cho H·ªô V·ªá Th·∫ßn ƒëi chi·∫øn ƒë·∫•u! N·∫øu kh√¥ng ch·ªçn ƒë·ªëi th·ªß s·∫Ω ƒë√°nh v·ªõi bot!")
    @discord.app_commands.describe(target="Ch·ªçn user ƒë·ªÉ chi·∫øn ƒë·∫•u v·ªõi H·ªô V·ªá Th·∫ßn c·ªßa ng∆∞·ªùi ƒë√≥.")
    @discord.app_commands.describe(max_players="Cho ph√©p b·∫•y nhi√™u ng∆∞·ªùi gia nh·∫≠p cu·ªôc chi·∫øn.")
    @discord.app_commands.choices(max_players=[
        Choice(name="1", value="1"),
        Choice(name="2", value="2"),
        Choice(name="3", value="3"),
    ])
    @discord.app_commands.checks.cooldown(1, 20)
    async def ga_battle_slash_command(self, interaction: discord.Interaction, target: Optional[discord.Member] = None, max_players: str = None):
        await interaction.response.defer(ephemeral=False)
        
        #Kh√¥ng cho d√πng bot n·∫øu kh√¥ng ph·∫£i user
        if CustomFunctions.check_if_dev_mode() == True and interaction.user.id != UserEnum.UserId.DARKIE.value:
            view = SelfDestructView(timeout=30)
            embed = discord.Embed(title=f"Darkie ƒëang nghi√™n c·ª©u, c·∫≠p nh·∫≠t v√† s·ª≠a ch·ªØa bot! Vui l√≤ng ƒë·ª£i nh√©!",color=discord.Color.blue())
            mess = await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            view.message = mess
            return
        
        if target!= None and target.id == interaction.user.id:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"B·∫°n kh√¥ng th·ªÉ chi·∫øn ƒë·∫•u v·ªõi b·∫£n th√¢n m√¨nh!", ephemeral=True, view=view)
            view.message = mess
            return
        
        user_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=interaction.user.id)
        if user_profile == None:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        elif user_profile.guardian == None or user_profile.guardian.is_dead:
            view = SelfDestructView(timeout=30)
            mess = await interaction.followup.send(content=f"Vui l√≤ng mua H·ªô V·ªá Th·∫ßn tr∆∞·ªõc b·∫±ng l·ªánh {SlashCommand.SHOP_GUARDIAN.value} ƒë√£!", ephemeral=True, view=view)
            view.message = mess
            return
        
        if user_profile.guardian.last_battle != None:
            time_window = timedelta(minutes=30)
            check = UtilitiesFunctions.check_if_within_time_delta(input=user_profile.guardian.last_battle, time_window=time_window)
            if check:
                next_time = user_profile.guardian.last_battle + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n ƒë√£ cho H·ªô V·ªá Th·∫ßn chi·∫øn ƒë·∫•u r·ªìi. Vui l√≤ng th·ª±c hi·ªán l·∫°i l·ªánh v√†o l√∫c <t:{unix_time}:t>!", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view, ephemeral=False)
                view.message = mess
                return
        
        if user_profile.guardian.last_joined_battle != None:
            time_window = timedelta(minutes=1)
            check = UtilitiesFunctions.check_if_within_time_delta(input=user_profile.guardian.last_joined_battle, time_window=time_window)
            if check:
                next_time = user_profile.guardian.last_joined_battle + time_window
                unix_time = int(next_time.timestamp())
                embed = discord.Embed(title=f"", description=f"üö´ B·∫°n v·ª´a tham chi·∫øn xong. Vui l√≤ng ƒë·ª£i m·ªôt ph√∫t r·ªìi th·ª±c hi·ªán l·∫°i l·ªánh!", color=0xc379e0)
                view = SelfDestructView(timeout=120)
                mess = await interaction.followup.send(embed=embed, view=view, ephemeral=False)
                view.message = mess
                return

        if user_profile.guardian.time_to_recover != None:
            if user_profile.guardian.time_to_recover > datetime.now():
                view = SelfDestructView(timeout=30)
                next_time = user_profile.guardian.time_to_recover
                unix_time = int(next_time.timestamp())
                mess = await interaction.followup.send(content=f"H·ªô V·ªá Th·∫ßn c·ªßa b·∫°n ƒëang b·ªã th∆∞∆°ng! Vui l√≤ng ch·ªù h·ªìi ph·ª•c v√†o l√∫c <t:{unix_time}:t> ho·∫∑c mua b√¨nh h·ªìi ph·ª•c trong {SlashCommand.SHOP_GLOBAL.value}!", ephemeral=True, view=view)
                view.message = mess
                return
            else:
                #H·ªìi ph·ª•c 50% m√°u, 50% th·ªÉ l·ª±c
                health = int(user_profile.guardian.max_health*50/100)
                stamina = int(user_profile.guardian.max_stamina*50/100)
                ProfileMongoManager.update_guardian_stats(guild_id=interaction.guild_id,user_id=interaction.user.id, health=health, stamina=stamina)
        
        
        target_profile = None
        if target != None:
            target_profile = ProfileMongoManager.find_profile_by_id(guild_id=interaction.guild_id, user_id=target.id)
            if target_profile == None:
                view = SelfDestructView(timeout=30)
                mess = await interaction.followup.send(content=f"ƒê·ªëi th·ªß {target.mention} vui l√≤ng d√πng l·ªánh {SlashCommand.PROFILE.value} tr∆∞·ªõc ƒë√£!", ephemeral=True, view=view)
                view.message = mess
                return
            elif target_profile.guardian == None or target_profile.guardian.is_dead:
                view = SelfDestructView(timeout=30)
                mess = await interaction.followup.send(content=f"ƒê·ªëi th·ªß {target.mention} vui l√≤ng mua H·ªô V·ªá Th·∫ßn tr∆∞·ªõc b·∫±ng l·ªánh {SlashCommand.SHOP_GUARDIAN.value} ƒë√£!", ephemeral=True, view=view)
                view.message = mess
                return
            
            if target_profile.guardian.time_to_recover != None:
                if target_profile.guardian.time_to_recover > datetime.now():
                    view = SelfDestructView(timeout=30)
                    next_time = target_profile.guardian.time_to_recover
                    unix_time = int(next_time.timestamp())
                    mess = await interaction.followup.send(content=f"H·ªô V·ªá Th·∫ßn c·ªßa {target.mention} ƒëang b·ªã th∆∞∆°ng! Vui l√≤ng ch·ªù h·ªìi ph·ª•c v√†o l√∫c <t:{unix_time}:t> ho·∫∑c mua b√¨nh h·ªìi ph·ª•c trong {SlashCommand.SHOP_GLOBAL.value}!", ephemeral=True, view=view)
                    view.message = mess
                    return
                else:
                    #H·ªìi ph·ª•c 50% m√°u, 50% th·ªÉ l·ª±c
                    health = int(target_profile.guardian.max_health*50/100)
                    stamina = int(target_profile.guardian.max_stamina*50/100)
                    ProfileMongoManager.update_guardian_stats(guild_id=interaction.guild_id,user_id=target.id, health=health, stamina=stamina)
            
        is_players_versus_player = False
        title = f""
        if target != None:
            is_players_versus_player = True
            title = f"üî• {interaction.user.mention} VS {target.mention} üî•"
            
                #T√≠nh reward c·ªßa battle
        gold_reward = 75
        silver_reward = 100
        exp_reward = 80
        dignity_point_reward = 10
        
        if is_players_versus_player:
            gold_reward = 45
            exp_reward = 45
            dignity_point_reward = 5
            silver_reward = 0
            #ƒê√°nh giao h·ªØu th√¨ 100% h·∫øt
            user_profile.guardian.health = user_profile.guardian.max_health
            user_profile.guardian.mana = user_profile.guardian.max_mana
            user_profile.guardian.stamina = user_profile.guardian.max_stamina
            target_profile.guardian.health = target_profile.guardian.max_health
            target_profile.guardian.mana = target_profile.guardian.max_mana
            target_profile.guardian.stamina = target_profile.guardian.max_stamina
        
        embed = discord.Embed(title=f"", description=title, color=0x0ce7f2)
        
        embed.add_field(name=f"", value=f"H·ªô V·ªá Th·∫ßn {user_profile.guardian.ga_emoji} - **{user_profile.guardian.ga_name}** (C·∫•p {user_profile.guardian.level}) c·ªßa {interaction.user.mention}", inline=False)
        embed.add_field(name=f"", value=f"ü¶æ: **{user_profile.guardian.attack_power}**\n{UtilitiesFunctions.progress_bar_stat(input_value=user_profile.guardian.health, max_value=user_profile.guardian.max_health, emoji=EmojiCreation2.HP.value)}\n{UtilitiesFunctions.progress_bar_stat(input_value=user_profile.guardian.stamina, max_value=user_profile.guardian.max_stamina, emoji=EmojiCreation2.STAMINA.value)}\n{UtilitiesFunctions.progress_bar_stat(input_value=user_profile.guardian.mana, max_value=user_profile.guardian.max_mana, emoji=EmojiCreation2.MP.value)}", inline=False)
        embed.add_field(name=f"", value="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨Œπ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê>", inline=False)
        text = ""
        enemy: GuardianAngel = None
        if target != None:
            text = f"H·ªô V·ªá Th·∫ßn {target_profile.guardian.ga_emoji} - **{target_profile.guardian.ga_name}** (C·∫•p {target_profile.guardian.level}) c·ªßa {target.mention}"
            embed.add_field(name=f"", value=text, inline=False)
            embed.add_field(name=f"", value=f"ü¶æ: **{target_profile.guardian.attack_power}**\n{UtilitiesFunctions.progress_bar_stat(input_value=target_profile.guardian.health, max_value=target_profile.guardian.max_health, emoji=EmojiCreation2.HP.value)}\n{UtilitiesFunctions.progress_bar_stat(input_value=target_profile.guardian.stamina, max_value=target_profile.guardian.max_stamina, emoji=EmojiCreation2.STAMINA.value)}\n{UtilitiesFunctions.progress_bar_stat(input_value=target_profile.guardian.mana, max_value=target_profile.guardian.max_mana, emoji=EmojiCreation2.MP.value)}", inline=False)
            enemy = target_profile.guardian
        else:
            enemy: GuardianAngel = ListGAAndSkills.get_random_ga_enemy_generic(level=user_profile.guardian.level)
            text = f"K·∫ª th√π {enemy.ga_emoji} - **{enemy.ga_name}** (C·∫•p {enemy.level})"
            embed.add_field(name=f"", value=text, inline=False)
            embed.add_field(name=f"", value="", inline=False)
            embed.add_field(name=f"", value=f"ü¶æ: **{enemy.attack_power}**\n{UtilitiesFunctions.progress_bar_stat(input_value=enemy.health, max_value=enemy.max_health, emoji=EmojiCreation2.HP.value)}\n{UtilitiesFunctions.progress_bar_stat(input_value=enemy.stamina, max_value=enemy.max_stamina, emoji=EmojiCreation2.STAMINA.value)}\n{UtilitiesFunctions.progress_bar_stat(input_value=enemy.mana, max_value=enemy.max_mana, emoji=EmojiCreation2.MP.value)}", inline=False)
            
        if max_players == None: max_players = "3"
        max_players_as_int = int(max_players)
        
        #T√≠nh l·∫°i theo enemy_ga
        gold_reward = int(gold_reward + gold_reward*enemy.level*0.2)
        silver_reward = int(silver_reward + silver_reward*enemy.level*0.3)
        exp_reward = int(exp_reward + exp_reward*enemy.level*0.1)
        if CustomFunctions.check_if_dev_mode() == False:
            ProfileMongoManager.update_main_guardian_profile_time(guild_id=interaction.guild_id,user_id=interaction.user.id, data_type="last_battle", date_value=datetime.now())
            ProfileMongoManager.update_main_guardian_profile_time(guild_id=interaction.guild_id,user_id=interaction.user.id, data_type="last_joined_battle", date_value=datetime.now())
        view = GaBattleView(user=interaction.user, user_profile=user_profile, target=target, target_profile=target_profile, is_players_versus_players=is_players_versus_player, max_players=max_players_as_int, enemy_ga=enemy, embed_title=title, guild_id=interaction.guild_id, gold_reward=gold_reward, silver_reward=silver_reward, bonus_exp=exp_reward, dignity_point=dignity_point_reward)
        mess = await interaction.followup.send(embed=embed, view=view)
        view.message = mess
        print(f"Username {interaction.user.name} has started guardian battle in guild {interaction.guild.name} at channel {interaction.channel.name}!")
        await view.commence_battle()
        return
        
    @ga_battle_slash_command.error
    async def ga_battle_slash_command_error(self, interaction: discord.Interaction, error):
        if isinstance(error, discord.app_commands.CommandOnCooldown):
            await interaction.response.send_message(f"‚è≥ L·ªánh ƒëang cooldown, vui l√≤ng th·ª±c hi·ªán l·∫°i trong v√≤ng {error.retry_after:.2f}s t·ªõi.", ephemeral=True)
        else:
            await interaction.response.send_message("C√≥ l·ªói kh√° b·ª± ƒë√£ x·∫£y ra. L·∫≠p t·ª©c li√™n h·ªá Darkie ngay.", ephemeral=True)