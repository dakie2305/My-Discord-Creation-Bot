import discord
from Handling.Economy.Profile.ProfileClass import Profile
import Handling.Economy.Profile.ProfileMongoManager as ProfileMongoManager
from CustomEnum.EmojiEnum import EmojiCreation2
from typing import List
from datetime import datetime, timedelta
from db.Class.CustomClass import UserInfo
import db.DbMongoManager as db 

class InventoryAttackAuthorityInterceptView(discord.ui.View):
    def __init__(self, user_profile: Profile, user: discord.Member, target_profile: Profile, target: discord.Member, authority_user: Profile):
        super().__init__(timeout=30)
        self.message: discord.Message = None
        self.user_profile = user_profile
        self.user = user
        self.target_profile = target_profile
        self.target = target
        self.authority_user = authority_user
        self.use_button = discord.ui.Button(label="üö® Ch√≠nh Quy·ªÅn V√†o Cu·ªôc üö®", style=discord.ButtonStyle.green)
        self.use_button.callback = self.use_button_callback
        self.add_item(self.use_button)
        self.interrupted = False

    async def on_timeout(self):
        if self.message != None: 
            try:
                await self.message.delete()
            except Exception: return
            return
    
    async def use_button_callback(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=True)
        if self.authority_user == None:
            await interaction.followup.send(f"Server n√†y kh√¥ng c√≥ ch√≠nh quy·ªÅn ƒë·ªÉ gi·∫£i quy·∫øt!", ephemeral=True)
            return
        elif interaction.user.id != self.authority_user.user_id:
            await interaction.followup.send(f"Ch·ªâ Ch√≠nh Quy·ªÅn <@{self.authority_user.user_id}> m·ªõi c√≥ th·ªÉ gi·∫£i quy·∫øt, vui l√≤ng g·ªçi Ch√≠nh Quy·ªÅn!", ephemeral=True)
            return
        self.interrupted = True
        await interaction.followup.send(content="B·∫°n ƒë√£ ngƒÉn ch·∫∑n t·∫•n c√¥ng!")
        channel = interaction.channel
        #Tr·ª´ ti·ªÅn v√† tr·ª´ ƒëi·ªÉm nh√¢n ph·∫©m c·ªßa ng∆∞·ªùi g√¢y g·ªó
        fine_money = int(self.user_profile.silver * 0.2) if self.user_profile != None else 100
        if fine_money == None or fine_money <100 : fine_money = 100
        if fine_money == None or fine_money > 450000 : fine_money = 450000
        dignity_point = 20
        
        embed = discord.Embed(title=f"", description=f"<@{self.user_profile.user_id}> ƒë√£ b·ªã Ch√≠nh Quy·ªÅn <@{self.authority_user.user_id}> ph√°t hi·ªán d√πng v≈© kh√≠ tr√°i ph√©p!", color=0xc379e0)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} Tr·ª´ **{fine_money}** {EmojiCreation2.SILVER.value}", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} Tr·ª´ **{dignity_point} nh√¢n ph·∫©m**", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} T·ªëng v√†o t√π trong 2 ti·∫øng!", inline=False)
        embed.add_field(name=f"", value=f"{EmojiCreation2.SHINY_POINT.value} T·ªãch thu lo·∫°i v≈© kh√≠ [{self.user_profile.attack_item.emoji}-{self.user_profile.attack_item.item_name}]!", inline=False)
        
        ProfileMongoManager.update_dignity_point(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=self.user.id, user_name=self.user.name, user_display_name=self.user.display_name, dignity_point= -dignity_point)
        ProfileMongoManager.update_profile_money(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=self.user.id, user_name=self.user.name, user_display_name=self.user.display_name,copper= -fine_money)
        
        #Xo√° v≈© kh√≠
        ProfileMongoManager.update_list_items_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=self.user.id, user_name=self.user.name, user_display_name=self.user.display_name, item=self.user_profile.attack_item, amount= -100)
        time_window = timedelta(hours=2)
        jail_time = datetime.now() + time_window
        #Jail
        ProfileMongoManager.update_jail_time(guild_id=interaction.guild_id, user_id=self.user.id, jail_time=jail_time)
        #C·∫≠p nh·∫≠t last crime
        ProfileMongoManager.update_last_crime_now(guild_id=interaction.guild_id, user_id=self.user.id)
        me = await channel.send(embed=embed)
        await self.jail_real(interaction=interaction, actual_user=self.user, message=me)
        return        
    
    
    async def jail_real(self, interaction: discord.Interaction, actual_user: discord.Member, message: discord.Message):
                #Server True Heavens s·∫Ω jail th·∫≠t lu√¥n
                if interaction.guild_id !=  1256987900277690470: return
                # Calculate the end time
                end_time = datetime.now() + timedelta(minutes=10)
                mordern_date_time_format = end_time.strftime(f"%d/%m/%Y %H:%M")
                # Save user's roles
                original_roles = [role for role in actual_user.roles if not role.is_default() and not role.is_premium_subscriber()]
                stored_original_roles = []
                for role in original_roles:
                    old_role = {
                                    "role_id": role.id,
                                    "role_name": role.name
                                    }
                    stored_original_roles.append(old_role)
                    # Remove all roles and add jail role
                jail_role = discord.utils.get(actual_user.guild.roles, name="ƒê√°y X√£ H·ªôi")
                if not jail_role:
                    jail_role = await actual_user.guild.create_role(name="ƒê√°y X√£ H·ªôi")
                user_info = UserInfo(
                        user_id=actual_user.id,
                        user_name=actual_user.name,
                        user_display_name=actual_user.display_name,
                        reason= f"Th√†nh ph·∫ßn th·ª±c hi·ªán ph·∫°m t·ªôi t·∫°i <#{message.channel.id}>",
                        jail_until= end_time,
                        roles=stored_original_roles
                        )
                    #T√¨m xem user n√†y ƒë√£ c√≥ ch∆∞a, ch∆∞a c√≥ th√¨ insert
                jail_db = "jailed_user"
                search_user = db.find_user_by_id(user_info.user_id, jail_db)
                if search_user == None:
                        #Insert
                        db.create_user(user_info= user_info, chosen_collection= jail_db)
                else:
                        #Update l·∫°i jail_until v√† reason
                        updated_data = {"jail_until": end_time.isoformat(), "reason" :user_info.reason }
                        db.update_guild_extra_info(guild_id=user_info.user_id, update_data= updated_data)
                try:
                        for ori_role in original_roles:
                            try:
                                await actual_user.remove_roles(ori_role)
                            except Exception:
                                continue
                        await actual_user.add_roles(jail_role)
                        
                        # Create embed object
                        embed = discord.Embed(title="ƒê·∫°i Lao Th·∫≥ng Ti·∫øn", description=f"K·∫ª t·ªôi ƒë·ªì {self.user.mention} ƒë√£ b·ªã ch√≠nh quy·ªÅn <@{self.authority_user.user_id}> b·∫Øt qu·∫£ tang ƒë·ªãnh d√πng v≈© kh√≠ tr√°i ph√©p!", color=0x00FF00)  # Green color
                        embed.add_field(name="L√Ω do b·ªã t√π ƒë√†y:", value=user_info.reason, inline=False)  # Single-line field
                        embed.add_field(name="Th·ªùi gian ra ƒë·∫°i lao:", value=f"{mordern_date_time_format}", inline=True)
                        embed.add_field(name="Ghi ch√∫", value="N·∫øu qu√° th·ªùi h·∫°n ph·∫°t t√π m√† ch∆∞a ƒë∆∞·ª£c ra t√π th√¨ h√£y la l√†ng l√™n nh√©!", inline=False) 
                        embed.set_footer(text=f"ƒê√£ b·ªã t·ªëng giam b·ªüi: Ch√≠nh Quy·ªÅn")  # Footer text
                        channel = interaction.guild.get_channel(1257012036718563380)
                        if channel:
                            await channel.send(embed=embed)
                        
                except Exception as e:
                        print(e)
        
        