
import discord
from discord.ui import Button, View
from Handling.Economy.Profile import ProfileMongoManager
from Handling.Economy.Profile.ProfileClass import Profile
from CustomEnum.EmojiEnum import EmojiCreation2
from datetime import datetime, timedelta
from db.Class.CustomClass import UserInfo
import Handling.Economy.Couple.CoupleMongoManager as CoupleMongoManager
from Handling.Economy.Inventory_Shop.ItemClass import Item

class CouplePairView(discord.ui.View):
    def __init__(self, user: discord.Member, user_profile: Profile, target: discord.Member, target_profile: Profile, chosen_gift: Item):
        super().__init__(timeout=60)
        self.old_message: discord.Message = None
        self.user = user
        self.user_profile = user_profile
        self.target = target
        self.target_profile = target_profile
        self.chosen_gift = chosen_gift
    
    async def on_timeout(self):
        await self.old_message.edit(view=None, content=f"R·∫•t ti·∫øc, {self.target.mention} ƒë√£ kh√¥ng tr·∫£ l·ªùi b·∫°n, c√≥ l·∫Ω ng∆∞·ªùi ·∫•y kh√¥ng th√≠ch b·∫°n r·ªìi!")
        return
        
    @discord.ui.button(label="‚ù§Ô∏è Ch·∫•p nh·∫≠n", style=discord.ButtonStyle.green)
    async def yes_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user.id != self.target.id: return
        await interaction.response.defer(ephemeral=True)
        CoupleMongoManager.create_couple(guild_id=interaction.guild_id, guild_name=interaction.guild.name, first_user_id=self.user.id, first_user_name=self.user.name, first_user_display_name=self.user.display_name, second_user_id=self.target.id, second_user_name=self.target.name, second_user_display_name=self.target.display_name)
        #Chuy·ªÉn item t·ª´ ng∆∞·ªùi n√†y sang ng∆∞·ªùi kia
        ProfileMongoManager.update_list_items_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=self.user.id, user_name=self.user.name, user_display_name=self.user.display_name, item= self.chosen_gift, amount= -1)
        ProfileMongoManager.update_list_items_profile(guild_id=interaction.guild_id, guild_name=interaction.guild.name, user_id=self.target.id, user_name=self.target.name, user_display_name=self.target.display_name, item= self.chosen_gift, amount= 1)
        await interaction.followup.send(content=f"B·∫°n ƒë√£ ch·∫•p nh·∫≠n l·ªùi b√†y t·ªè c·ªßa {self.user.mention}!", ephemeral=True)
        text = f"Ch√∫c m·ª´ng {self.user.mention}! {self.target.mention} ƒë√£ ƒë·ªìng √Ω l·ªùi b√†y t·ªè v√† v·∫≠t ph·∫©m [{self.chosen_gift.emoji} - **{self.chosen_gift.item_name}**]  c·ªßa b·∫°n, v√† c·∫£ hai ƒë√£ k·∫øt th√†nh ƒë√¥i!"
        await self.old_message.edit(content=text, view=None, embed= None)
        return
    
    @discord.ui.button(label="üíî T·ª´ ch·ªëi", style=discord.ButtonStyle.red)
    async def no_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user.id != self.target.id: return
        await interaction.response.defer(ephemeral=True)
        await interaction.followup.send(content=f"B·∫°n ƒë√£ t·ª´ ch·ªëi l·ªùi b√†y t·ªè c·ªßa {self.user.mention}!", ephemeral=True)
        text = f"R·∫•t ti·∫øc, {self.user.mention}! {self.target.mention} ch·ªâ xem b·∫°n l√† b·∫°n b√® m√† th√¥i!"
        await self.old_message.edit(content=text, view=None, embed= None)
        return
        