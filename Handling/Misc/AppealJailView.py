import discord
from CustomEnum.SlashEnum import SlashCommand
from CustomEnum.EmojiEnum import EmojiCreation2, EmojiCreation1
from typing import List, Optional, Dict
from CustomEnum.TrueHeavenEnum import TrueHeavenEnum
import CustomFunctions
from Handling.Misc.UtilitiesFunctionsEconomy import UtilitiesFunctions
from Handling.Economy.Profile import ProfileMongoManager
from db import DbMongoManager
from datetime import datetime, timedelta
import google.generativeai as genai
from db.Class.CustomClass import UserInfo


class AppealJailView(discord.ui.View):
    def __init__(self, user: discord.Member, guild_id: int, money: int = 0, money_type = "G"):
        super().__init__(timeout=15)
        self.message: discord.Message = None
        self.user = user
        self.guild_id = guild_id
        self.money = money
        self.money_type = money_type
        
        self.accept_button = discord.ui.Button(label="üö® Ch·∫•p Nh·∫≠n", style=discord.ButtonStyle.green)
        self.accept_button.callback = self.accept_button_callback
        self.add_item(self.accept_button)
    
    
    async def on_timeout(self):
        #Delete
        if self.message != None: 
            try:
                await self.message.delete()
            except Exception:
                return

    async def accept_button_callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user.id: return
        await interaction.response.defer(ephemeral=False)

        is_innocence = False
        is_acquit = False

        search_user = DbMongoManager.find_user_by_id(self.user.id, 'jailed_user')
        if search_user == None:
            embed = discord.Embed(title=f"", description=f"Tuy√™n √Ån", color=0xddede7)
            embed.add_field(name=f"", value=f"- B·ªã c√°o {interaction.user.mention} v√¥ t·ªôi, v√¨ kh√¥ng ·ªü trong t√π!", inline=False)
            embed.add_field(name=f"", value=f"- {interaction.user.mention} ƒë√£ ƒë√≥ng **{UtilitiesFunctions.shortened_currency(self.money)} {self.money_type}** ti·ªÅn kh√°ng √°n!", inline=False)
            self.process_money()
            await interaction.followup.send(embed=embed)
            return
        
        system_instruction = f"{CustomFunctions.initial_instruction} {CustomFunctions.court_officer_background_creation_1} {CustomFunctions.shared_background}"
        model = genai.GenerativeModel(model_name=CustomFunctions.AI_MODEL, safety_settings= CustomFunctions.safety_settings, system_instruction=system_instruction)
        today_str = datetime.today().strftime('%Y-%m-%d %H:%M:%S')

        prompt = f"""
        B·∫°n l√† m·ªôt ch·∫•p h√†nh vi√™n c·ªßa To√† √Ån T·ªëi Cao trong th·∫ø gi·ªõi gi·∫£ t∆∞·ªüng. Ng√†y h√¥m nay l√† {today_str}.
        ‚ö†Ô∏è B·∫Øt bu·ªôc: H√£y **nh·∫≠p vai ho√†n to√†n**, tuy·ªát ƒë·ªëi **kh√¥ng ƒë∆∞·ª£c nh·∫Øc ƒë·∫øn vai tr√≤ AI**, **kh√¥ng n√≥i b·∫°n l√† AI**, v√† **kh√¥ng ph√° v·ª° nh√¢n v·∫≠t**. Lu√¥n gi·ªØ vƒÉn phong c·ªßa m·ªôt ch·∫•p h√†nh vi√™n t√≤a √°n, nghi√™m t√∫c v√† chuy√™n nghi·ªáp (ho·∫∑c x·∫£o quy·ªát n·∫øu ch·ªçn t√≠nh c√°ch t∆∞∆°ng ·ª©ng). **Kh√¥ng c·∫ßn qu√° quan tr·ªçng vi·ªác tr√¨nh b√†y b·∫±ng ch·ª©ng, ch·ªâ d·ª±a tr√™n duy nh·∫•t nh·ªØng th√¥ng tin c√≥ s·∫µn**

        B·∫°n ph·∫£i b√≠ m·∫≠t ch·ªçn m·ªôt trong hai t√≠nh c√°ch:
        1. **Nghi√™m ngh·ªã ch√≠nh tr·ª±c**  (Ng∆∞·ªùi v√¨ l·∫Ω ph·∫£i)
        2. **Gian manh x·∫£o quy·ªát** (Ng∆∞·ªùi tham nh≈©ng, x·ª≠ tr·∫Øng th√†nh ƒëen kh√¥ng quan t√¢m l·∫Ω ph·∫£i)

        Kh√¥ng ti·∫øt l·ªô ho·∫∑c g·ª£i √Ω v·ªÅ t√≠nh c√°ch ƒë√£ ch·ªçn, d√π l√† tr·ª±c ti·∫øp hay gi√°n ti·∫øp.

        ---

        ## H·ªì s∆° v·ª• √°n:

        - **B·ªã c√°o**: {search_user.user_display_name} (`<@{self.user.id}>`, username: `{self.user.name}`)
        - **Ng∆∞·ªùi b·∫Øt gi·ªØ**: {search_user.jailer_display_name} (username: `{search_user.jailer_user_name}`)
        - **K√™nh x·∫£y ra v·ª• vi·ªác**: {search_user.channel_name}
        - **L√Ω do giam gi·ªØ**: "{search_user.reason}"
        - **Th·ªùi h·∫°n giam gi·ªØ**: {search_user.jail_until}

        ---

        ## Nhi·ªám v·ª• c·ªßa b·∫°n:
        D·ª±a v√†o h·ªì s∆° v·ª• √°n, h√£y ƒë∆∞a ra m·ªôt b·∫£n √°n h·ª£p l√Ω. **Lu√¥n k·∫øt lu·∫≠n b·∫±ng m·ªôt trong ba l·ª±a ch·ªçn r√µ r√†ng**:
        - **V√¥ T·ªôi**: B·ªã c√°o ph·∫°m l·ªói nh·ªè, l√Ω do b·∫Øt gi·ªØ kh√¥ng qu√° nghi√™m tr·ªçng.
        - **C√≥ T·ªôi**: L√Ω do b·∫Øt gi·ªØ ch√≠nh ƒë√°ng v√† h·ª£p ph√°p, ph√π h·ª£p th·ªùi gian giam gi·ªØ.
        - **Tr·∫Øng √Ån**: Ch·∫•p h√†nh vi√™n b·∫Øt gi·ªØ c√≥ d·∫•u hi·ªáu l·∫°m quy·ªÅn ho·∫∑c h√¨nh ph·∫°t v∆∞·ª£t qu√° m·ª©c, c·∫ßn xo√° b·ªè ph√°n quy·∫øt tr∆∞·ªõc ƒë√≥.

        üí° N·∫øu b·ªã c√°o l√† **c·ª±u ch·∫•p h√†nh vi√™n b·ªã b·∫Øt v√¨ l·∫°m quy·ªÅn**, m·∫∑c ƒë·ªãnh l√† **C√≥ T·ªôi**.

        B·∫°n ph·∫£i gi·∫£i th√≠ch b·∫£n √°n **b·∫±ng gi·ªçng ƒëi·ªáu ph√π h·ª£p v·ªõi t√≠nh c√°ch ƒë√£ ch·ªçn**, ng·∫Øn g·ªçn, nh∆∞ng ƒë·∫ßy ƒë·ªß l√Ω do. Tr√°nh l·∫∑p l·∫°i n·ªôi dung tr√™n. **Kh√¥ng b√¨nh lu·∫≠n ngo√†i vai. Kh√¥ng n√™u vai tr√≤ c·ªßa b·∫£n th√¢n ho·∫∑c h·ªá th·ªëng. Kh√¥ng qu√° quan tr·ªçng b·∫±ng ch·ª©ng.**

        H√£y b·∫Øt ƒë·∫ßu ph√°n x√©t v√† x∆∞ng h√¥ gi·ªëng v·ªõi phi√™n t√≤a x√©t x·ª≠.
        """

        try:
            response = model.generate_content(f"{prompt}")
            bot_response = CustomFunctions.remove_creation_name_prefix(f"{response.text}")
            await interaction.followup.send(f"{interaction.user.mention} {bot_response}")
            #D·ª±a tr√™n c√¢u tr·∫£ l·ªùi ƒë·ªÉ ph√°n
            final_text = "V√¥ T·ªôi"
            if "tr·∫Øng √°n" in bot_response.lower():
                is_acquit = True
                final_text = "Tr·∫Øng √Ån"
            elif "c√≥ t·ªôi" in bot_response.lower():
                is_innocence = False
                final_text = "C√≥ T·ªôi"
            else:
                is_innocence = True
            embed = discord.Embed(title=f"", description=f"Tuy√™n √Ån", color=0xddede7)
            embed.add_field(name=f"", value=f"- B·ªã c√°o {interaction.user.mention} nh·∫≠n ph√°n quy·∫øt: **{final_text}**!", inline=False)
            embed.add_field(name=f"", value=f"- {interaction.user.mention} ƒë√£ ƒë√≥ng **{UtilitiesFunctions.shortened_currency(self.money)} {self.money_type}** ti·ªÅn kh√°ng √°n!", inline=False)
            self.process_money()
            await interaction.channel.send(embed=embed)
            if is_acquit:
                actual_user = await interaction.guild.fetch_member(search_user.jailer_id)
                if actual_user is None: return
                await self.jail_real(interaction=interaction, actual_user=actual_user, search_user=search_user)
                await self.unjail_real(interaction=interaction)
            elif is_innocence:
                #Th·∫£
                await self.unjail_real(interaction=interaction)
                return
        except Exception as e:
            print(f"There is exception in jail appeal for user {self.user.name}, displayname {self.user.display_name}: {e}")
            return
    def process_money(self):
        ProfileMongoManager.update_profile_money_by_type(guild_id=self.guild_id, guild_name="", user_id=self.user.id, user_name=self.user.name, user_display_name=self.user.display_name, money=self.money, money_type=self.money_type)
        return

    async def unjail_real(self, interaction: discord.Interaction):
        if self.guild_id !=  TrueHeavenEnum.TRUE_HEAVENS_SERVER_ID.value: return
        jail_role = discord.utils.get(interaction.user.guild.roles, name="ƒê√°y X√£ H·ªôi")
        if jail_role:
            await interaction.user.remove_roles(jail_role)
        #T√¨m xem user n√†y ƒë√£ c√≥ ch∆∞a, c√≥ th√¨ xo√° kh·ªèi db jail_user
        search_user = DbMongoManager.find_user_by_id(interaction.user.id, 'jailed_user')
        if search_user:
            #Restore l·∫°i roles c≈© c·ªßa user
            for role in search_user.roles:
                get_role_from_server = discord.utils.get(interaction.user.guild.roles, id = role["role_id"])
                if get_role_from_server:
                    try:
                        await interaction.user.add_roles(get_role_from_server)
                    except Exception:
                        continue
            #Xo√° row kh·ªèi database
            DbMongoManager.delete_user_by_id(user_id= interaction.user.id, chosen_collection= 'jailed_user')
            # Create embed object
            mordern_date_time_format = datetime.now().strftime(f"%d/%m/%Y %H:%M")
            embed = discord.Embed(title="√Çn X√° Kh·ªèi ƒê·∫°i Lao", description=f"K·∫ª t·ªôi ƒë·ªì {interaction.user.mention} ƒë√£ ƒë∆∞·ª£c √¢n xo√° kh·ªèi ƒë·∫°i lao!", color=0x00FF00)  # Green color
            embed.add_field(name="L√Ω do ƒë∆∞·ª£c √¢n x√°:", value= "To√† √Ån T·ªëi Cao x√©t v√¥ t·ªôi", inline=False)  # Single-line field
            embed.add_field(name="Th·ªùi gian ra ƒë·∫°i lao:", value=f"{mordern_date_time_format}", inline=True)
            embed.add_field(name="Ghi ch√∫", value="Nh·ªõ ƒë·ª´ng vi ph·∫°m ƒë·ªÉ b·ªã t·ªëng v√†i ƒë·∫°i lao n·ªØa nh√©!", inline=False) 
            embed.set_footer(text=f"ƒê√£ ƒë∆∞·ª£c √¢n xo√° b·ªüi: To√† √Ån T·ªëi Cao")  # Footer text
            channel = interaction.guild.get_channel(1257012036718563380)
            if channel:
                await channel.send(embed=embed)

    async def jail_real(self, interaction: discord.Interaction, actual_user: discord.Member, search_user: UserInfo):
        #Server True Heavens s·∫Ω jail th·∫≠t lu√¥n
        if self.guild_id !=  TrueHeavenEnum.TRUE_HEAVENS_SERVER_ID.value: return
        # Calculate the end time
        now = datetime.now()
        #x3
        original_duration = search_user.jail_until - now
        end_time = now + original_duration * 3
        mordern_date_time_format = end_time.strftime(f"%d/%m/%Y %H:%M")
        # Save user's roles
        original_roles = [role for role in actual_user.roles if not role.is_default() and not role.is_premium_subscriber()]
        stored_original_roles = []
        for role in original_roles:
            old_role = {
                        "role_id": role.id,
                        "role_name": role.name
                        }
            stored_original_roles.append(old_role)
            # Remove all roles and add jail role
        jail_role = discord.utils.get(actual_user.guild.roles, name="ƒê√°y X√£ H·ªôi")
        if not jail_role:
            jail_role = await actual_user.guild.create_role(name="ƒê√°y X√£ H·ªôi")
        user_info = UserInfo(
                user_id=search_user.jailer_id,
                user_name=search_user.jailer_user_name,
                user_display_name=search_user.jailer_display_name,
                jailer_id=interaction.user.id,
                jailer_display_name=interaction.user.display_name,
                jailer_user_name= interaction.user.name,
                channel_id= interaction.channel_id,
                channel_name=interaction.channel.name,
                reason= f"C·ª±u ch·∫•p h√†nh vi√™n <@{search_user.jailer_id}> ƒë√£ l·∫°m d·ª•ng quy·ªÅn l·ª±c, giam gi·ªØ ng∆∞·ªùi v√¥ t·ªôi v√¥ c·ªõ v√† ƒë√£ b·ªã ch·∫•p h√†nh vi√™n to√† √°n t·ªëi coi ph√°n x√©t ph·∫£i b·ªã giam gi·ªØ v√¨ tr·∫Øng √°n!",
                jail_until= end_time,
                roles=stored_original_roles
                )
            #T√¨m xem user n√†y ƒë√£ c√≥ ch∆∞a, ch∆∞a c√≥ th√¨ insert
        jail_db = "jailed_user"
        search_user = DbMongoManager.find_user_by_id(user_info.user_id, jail_db)
        if search_user == None:
                #Insert
                DbMongoManager.create_user(user_info= user_info, chosen_collection= jail_db)
        else:
                #Update l·∫°i jail_until v√† reason
                updated_data = {"jail_until": end_time, "reason": user_info.reason }
                DbMongoManager.update_guild_extra_info(guild_id=user_info.user_id, update_data= updated_data)
        try:
                for ori_role in original_roles:
                    try:
                        await actual_user.remove_roles(ori_role)
                    except Exception:
                        continue
                await actual_user.add_roles(jail_role)
                
                # Create embed object
                embed = discord.Embed(title="ƒê·∫°i Lao Th·∫≥ng Ti·∫øn", description=f"K·∫ª t·ªôi ƒë·ªì {actual_user.mention} ƒë√£ b·ªã t·ªëng v√†o ƒë·∫°i lao!", color=0x00FF00)  # Green color
                embed.add_field(name="L√Ω do b·ªã t√π ƒë√†y:", value=user_info.reason, inline=False)  # Single-line field
                embed.add_field(name="Th·ªùi gian ra ƒë·∫°i lao:", value=f"{mordern_date_time_format}", inline=True)
                embed.add_field(name="Ghi ch√∫", value="N·∫øu qu√° th·ªùi h·∫°n ph·∫°t t√π m√† ch∆∞a ƒë∆∞·ª£c ra t√π th√¨ h√£y la l√†ng l√™n nh√©!", inline=False) 
                embed.set_footer(text=f"ƒê√£ b·ªã t·ªëng giam b·ªüi: To√† √Ån T·ªëi Cao")
                channel = interaction.guild.get_channel(1257012036718563380)
                if channel:
                    await channel.send(embed=embed)
                
        except Exception as e:
                print(e)

